function Df = self_diff_bihelix_func_wrt_curve_geometry_and_frenet_frame(k0, tau0, k1, tau1, s, sj, theta1, phi1, theta2, phi2)
    
    % -- derivative of FIRST helix w.r.t curvature k0 --
    DF1_k0 = (2*k0^2*(cos(theta1)*sin(phi1)*sin(theta2) - cos(theta2)*sin(phi2)*sin(theta1))*(cos(s*(k0^2 + tau0^2)^(1/2)) - 1))/(k0^2 + tau0^2)^2 - (tau0*(cos(phi1)^2*cos(phi2)*cos(theta1)^2*cos(theta2) - cos(phi2)*cos(theta2) + cos(phi1)*cos(theta1)*sin(theta1)*sin(theta2) + cos(phi1)*cos(theta1)^2*cos(theta2)*sin(phi1)*sin(phi2))*(tau0^2*sin(s*(k0^2 + tau0^2)^(1/2)) - 2*k0^2*sin(s*(k0^2 + tau0^2)^(1/2)) - s*tau0^2*(k0^2 + tau0^2)^(1/2) + k0^2*s*(k0^2 + tau0^2)^(1/2) + k0^2*s*cos(s*(k0^2 + tau0^2)^(1/2))*(k0^2 + tau0^2)^(1/2)))/(k0^2 + tau0^2)^(5/2) - ((cos(theta1)*sin(phi1)*sin(theta2) - cos(theta2)*sin(phi2)*sin(theta1))*(cos(s*(k0^2 + tau0^2)^(1/2)) - 1))/(k0^2 + tau0^2) + (k0^2*s*sin(s*(k0^2 + tau0^2)^(1/2))*(cos(theta1)*sin(phi1)*sin(theta2) - cos(theta2)*sin(phi2)*sin(theta1)))/(k0^2 + tau0^2)^(3/2) - (k0*cos(phi1)*cos(theta1)*(k0^2*sin(s*(k0^2 + tau0^2)^(1/2)) - 2*tau0^2*sin(s*(k0^2 + tau0^2)^(1/2)) + 2*s*tau0^2*(k0^2 + tau0^2)^(1/2) - k0^2*s*cos(s*(k0^2 + tau0^2)^(1/2))*(k0^2 + tau0^2)^(1/2)))/(k0^2 + tau0^2)^(5/2);
    DF2_k0 = ((cos(phi1)*cos(theta1)*sin(theta2) - cos(phi2)*cos(theta2)*sin(theta1))*(cos(s*(k0^2 + tau0^2)^(1/2)) - 1))/(k0^2 + tau0^2) - (2*k0^2*(cos(phi1)*cos(theta1)*sin(theta2) - cos(phi2)*cos(theta2)*sin(theta1))*(cos(s*(k0^2 + tau0^2)^(1/2)) - 1))/(k0^2 + tau0^2)^2 + (tau0*(cos(theta2)*sin(phi2)*cos(phi1)^2*cos(theta1)^2 - cos(phi2)*cos(theta2)*sin(phi1)*cos(phi1)*cos(theta1)^2 - sin(phi1)*sin(theta2)*cos(theta1)*sin(theta1) + cos(theta2)*sin(phi2)*sin(theta1)^2)*(tau0^2*sin(s*(k0^2 + tau0^2)^(1/2)) - 2*k0^2*sin(s*(k0^2 + tau0^2)^(1/2)) - s*tau0^2*(k0^2 + tau0^2)^(1/2) + k0^2*s*(k0^2 + tau0^2)^(1/2) + k0^2*s*cos(s*(k0^2 + tau0^2)^(1/2))*(k0^2 + tau0^2)^(1/2)))/(k0^2 + tau0^2)^(5/2) - (k0*cos(theta1)*sin(phi1)*(k0^2*sin(s*(k0^2 + tau0^2)^(1/2)) - 2*tau0^2*sin(s*(k0^2 + tau0^2)^(1/2)) + 2*s*tau0^2*(k0^2 + tau0^2)^(1/2) - k0^2*s*cos(s*(k0^2 + tau0^2)^(1/2))*(k0^2 + tau0^2)^(1/2)))/(k0^2 + tau0^2)^(5/2) - (k0^2*s*sin(s*(k0^2 + tau0^2)^(1/2))*(cos(phi1)*cos(theta1)*sin(theta2) - cos(phi2)*cos(theta2)*sin(theta1)))/(k0^2 + tau0^2)^(3/2);
    DF3_k0 = (tau0*(cos(phi1)*cos(theta1)*(cos(phi1)*cos(theta1)*sin(theta2) - cos(phi2)*cos(theta2)*sin(theta1)) + cos(theta1)*sin(phi1)*(cos(theta1)*sin(phi1)*sin(theta2) - cos(theta2)*sin(phi2)*sin(theta1)))*(tau0^2*sin(s*(k0^2 + tau0^2)^(1/2)) - 2*k0^2*sin(s*(k0^2 + tau0^2)^(1/2)) - s*tau0^2*(k0^2 + tau0^2)^(1/2) + k0^2*s*(k0^2 + tau0^2)^(1/2) + k0^2*s*cos(s*(k0^2 + tau0^2)^(1/2))*(k0^2 + tau0^2)^(1/2)))/(k0^2 + tau0^2)^(5/2) - (k0*sin(theta1)*(k0^2*sin(s*(k0^2 + tau0^2)^(1/2)) - 2*tau0^2*sin(s*(k0^2 + tau0^2)^(1/2)) + 2*s*tau0^2*(k0^2 + tau0^2)^(1/2) - k0^2*s*cos(s*(k0^2 + tau0^2)^(1/2))*(k0^2 + tau0^2)^(1/2)))/(k0^2 + tau0^2)^(5/2) + (sin(phi1 - phi2)*cos(theta1)*cos(theta2)*(cos(s*(k0^2 + tau0^2)^(1/2)) - 1))/(k0^2 + tau0^2) - (2*k0^2*sin(phi1 - phi2)*cos(theta1)*cos(theta2)*(cos(s*(k0^2 + tau0^2)^(1/2)) - 1))/(k0^2 + tau0^2)^2 - (k0^2*s*sin(phi1 - phi2)*sin(s*(k0^2 + tau0^2)^(1/2))*cos(theta1)*cos(theta2))/(k0^2 + tau0^2)^(3/2);
    Df.f1k0 = DF1_k0;
    Df.f2k0 = DF2_k0;
    Df.f3k0 = DF3_k0;
    
    % -- derivative of FIRST helix w.r.t torsion tau0 --
    DF1_tau0 = (2*k0*tau0*(cos(theta1)*sin(phi1)*sin(theta2) - cos(theta2)*sin(phi2)*sin(theta1))*(cos(s*(k0^2 + tau0^2)^(1/2)) - 1))/(k0^2 + tau0^2)^2 - (k0*(cos(phi1)^2*cos(phi2)*cos(theta1)^2*cos(theta2) - cos(phi2)*cos(theta2) + cos(phi1)*cos(theta1)*sin(theta1)*sin(theta2) + cos(phi1)*cos(theta1)^2*cos(theta2)*sin(phi1)*sin(phi2))*(k0^2*sin(s*(k0^2 + tau0^2)^(1/2)) - 2*tau0^2*sin(s*(k0^2 + tau0^2)^(1/2)) + s*tau0^2*(k0^2 + tau0^2)^(1/2) - k0^2*s*(k0^2 + tau0^2)^(1/2) + s*tau0^2*cos(s*(k0^2 + tau0^2)^(1/2))*(k0^2 + tau0^2)^(1/2)))/(k0^2 + tau0^2)^(5/2) + (k0*s*tau0*sin(s*(k0^2 + tau0^2)^(1/2))*(cos(theta1)*sin(phi1)*sin(theta2) - cos(theta2)*sin(phi2)*sin(theta1)))/(k0^2 + tau0^2)^(3/2) + (k0^2*tau0*cos(phi1)*cos(theta1)*(2*s*(k0^2 + tau0^2)^(1/2) - 3*sin(s*(k0^2 + tau0^2)^(1/2)) + s*cos(s*(k0^2 + tau0^2)^(1/2))*(k0^2 + tau0^2)^(1/2)))/(k0^2 + tau0^2)^(5/2);
    DF2_tau0 = (k0*(cos(theta2)*sin(phi2)*cos(phi1)^2*cos(theta1)^2 - cos(phi2)*cos(theta2)*sin(phi1)*cos(phi1)*cos(theta1)^2 - sin(phi1)*sin(theta2)*cos(theta1)*sin(theta1) + cos(theta2)*sin(phi2)*sin(theta1)^2)*(k0^2*sin(s*(k0^2 + tau0^2)^(1/2)) - 2*tau0^2*sin(s*(k0^2 + tau0^2)^(1/2)) + s*tau0^2*(k0^2 + tau0^2)^(1/2) - k0^2*s*(k0^2 + tau0^2)^(1/2) + s*tau0^2*cos(s*(k0^2 + tau0^2)^(1/2))*(k0^2 + tau0^2)^(1/2)))/(k0^2 + tau0^2)^(5/2) - (2*k0*tau0*(cos(phi1)*cos(theta1)*sin(theta2) - cos(phi2)*cos(theta2)*sin(theta1))*(cos(s*(k0^2 + tau0^2)^(1/2)) - 1))/(k0^2 + tau0^2)^2 + (k0^2*tau0*cos(theta1)*sin(phi1)*(2*s*(k0^2 + tau0^2)^(1/2) - 3*sin(s*(k0^2 + tau0^2)^(1/2)) + s*cos(s*(k0^2 + tau0^2)^(1/2))*(k0^2 + tau0^2)^(1/2)))/(k0^2 + tau0^2)^(5/2) - (k0*s*tau0*sin(s*(k0^2 + tau0^2)^(1/2))*(cos(phi1)*cos(theta1)*sin(theta2) - cos(phi2)*cos(theta2)*sin(theta1)))/(k0^2 + tau0^2)^(3/2);
    DF3_tau0 = (k0*(cos(phi1)*cos(theta1)*(cos(phi1)*cos(theta1)*sin(theta2) - cos(phi2)*cos(theta2)*sin(theta1)) + cos(theta1)*sin(phi1)*(cos(theta1)*sin(phi1)*sin(theta2) - cos(theta2)*sin(phi2)*sin(theta1)))*(k0^2*sin(s*(k0^2 + tau0^2)^(1/2)) - 2*tau0^2*sin(s*(k0^2 + tau0^2)^(1/2)) + s*tau0^2*(k0^2 + tau0^2)^(1/2) - k0^2*s*(k0^2 + tau0^2)^(1/2) + s*tau0^2*cos(s*(k0^2 + tau0^2)^(1/2))*(k0^2 + tau0^2)^(1/2)))/(k0^2 + tau0^2)^(5/2) + (k0^2*tau0*sin(theta1)*(2*s*(k0^2 + tau0^2)^(1/2) - 3*sin(s*(k0^2 + tau0^2)^(1/2)) + s*cos(s*(k0^2 + tau0^2)^(1/2))*(k0^2 + tau0^2)^(1/2)))/(k0^2 + tau0^2)^(5/2) - (2*k0*tau0*sin(phi1 - phi2)*cos(theta1)*cos(theta2)*(cos(s*(k0^2 + tau0^2)^(1/2)) - 1))/(k0^2 + tau0^2)^2 - (k0*s*tau0*sin(phi1 - phi2)*sin(s*(k0^2 + tau0^2)^(1/2))*cos(theta1)*cos(theta2))/(k0^2 + tau0^2)^(3/2);
    Df.f1t0 = DF1_tau0;
    Df.f2t0 = DF2_tau0;
    Df.f3t0 = DF3_tau0;
    
    % -- derivative of FIRST helix w.r.t theta1 --
    DF1_theta1 = (k0*(sin(phi1)*sin(theta1)*sin(theta2) + cos(theta1)*cos(theta2)*sin(phi2))*(cos(s*(k0^2 + tau0^2)^(1/2)) - 1))/(k0^2 + tau0^2) - (cos(phi1)*sin(theta1)*(k0^2*sin(s*(k0^2 + tau0^2)^(1/2)) + s*tau0^2*(k0^2 + tau0^2)^(1/2)))/(k0^2 + tau0^2)^(3/2) + (k0*tau0*cos(phi1)*(sin(s*(k0^2 + tau0^2)^(1/2)) - s*(k0^2 + tau0^2)^(1/2))*(sin(theta2) - 2*cos(theta1)^2*sin(theta2) + 2*cos(phi1)*cos(phi2)*cos(theta1)*cos(theta2)*sin(theta1) + 2*cos(theta1)*cos(theta2)*sin(phi1)*sin(phi2)*sin(theta1)))/(k0^2 + tau0^2)^(3/2);
    DF2_theta1 = (k0*tau0*(sin(s*(k0^2 + tau0^2)^(1/2)) - s*(k0^2 + tau0^2)^(1/2))*(sin(phi1)*sin(theta2) - 2*cos(theta1)^2*sin(phi1)*sin(theta2) + 2*cos(theta1)*cos(theta2)*sin(phi2)*sin(theta1) - 2*cos(phi1)^2*cos(theta1)*cos(theta2)*sin(phi2)*sin(theta1) + 2*cos(phi1)*cos(phi2)*cos(theta1)*cos(theta2)*sin(phi1)*sin(theta1)))/(k0^2 + tau0^2)^(3/2) - (sin(phi1)*sin(theta1)*(k0^2*sin(s*(k0^2 + tau0^2)^(1/2)) + s*tau0^2*(k0^2 + tau0^2)^(1/2)))/(k0^2 + tau0^2)^(3/2) - (k0*(cos(phi1)*sin(theta1)*sin(theta2) + cos(phi2)*cos(theta1)*cos(theta2))*(cos(s*(k0^2 + tau0^2)^(1/2)) - 1))/(k0^2 + tau0^2);
    DF3_theta1 = (cos(theta1)*(k0^2*sin(s*(k0^2 + tau0^2)^(1/2)) + s*tau0^2*(k0^2 + tau0^2)^(1/2)))/(k0^2 + tau0^2)^(3/2) - (k0*tau0*(sin(s*(k0^2 + tau0^2)^(1/2)) - s*(k0^2 + tau0^2)^(1/2))*(2*cos(theta1)*sin(theta1)*sin(theta2) - cos(phi1)*cos(phi2)*cos(theta2) - cos(theta2)*sin(phi1)*sin(phi2) + 2*cos(phi1)*cos(phi2)*cos(theta1)^2*cos(theta2) + 2*cos(theta1)^2*cos(theta2)*sin(phi1)*sin(phi2)))/(k0^2 + tau0^2)^(3/2) - (k0*sin(phi1 - phi2)*cos(theta2)*sin(theta1)*(cos(s*(k0^2 + tau0^2)^(1/2)) - 1))/(k0^2 + tau0^2);
    Df.f1theta1 = DF1_theta1;
    Df.f2theta1 = DF2_theta1;
    Df.f3theta1 = DF3_theta1;
    
    % -- derivative of FIRST helix w.r.t theta2 --
    DF1_theta2 = (sin(theta1)*(cos(phi2)*sin(theta1)*sin(theta2) + cos(phi1)*cos(theta1)*cos(theta2)) - cos(theta1)*sin(phi1)*(cos(phi1)*cos(theta1)*sin(phi2)*sin(theta2) - cos(phi2)*cos(theta1)*sin(phi1)*sin(theta2)))*((k0*s*tau0)/(k0^2 + tau0^2) - (k0*tau0*sin(s*(k0^2 + tau0^2)^(1/2)))/(k0^2 + tau0^2)^(3/2)) - (k0*(sin(phi2)*sin(theta1)*sin(theta2) + cos(theta1)*cos(theta2)*sin(phi1))*(cos(s*(k0^2 + tau0^2)^(1/2)) - 1))/(k0^2 + tau0^2);
    DF2_theta2 = (sin(theta1)*(sin(phi2)*sin(theta1)*sin(theta2) + cos(theta1)*cos(theta2)*sin(phi1)) + cos(phi1)*cos(theta1)*(cos(phi1)*cos(theta1)*sin(phi2)*sin(theta2) - cos(phi2)*cos(theta1)*sin(phi1)*sin(theta2)))*((k0*s*tau0)/(k0^2 + tau0^2) - (k0*tau0*sin(s*(k0^2 + tau0^2)^(1/2)))/(k0^2 + tau0^2)^(3/2)) + (k0*(cos(phi2)*sin(theta1)*sin(theta2) + cos(phi1)*cos(theta1)*cos(theta2))*(cos(s*(k0^2 + tau0^2)^(1/2)) - 1))/(k0^2 + tau0^2);
    DF3_theta2 = (k0*tau0*(cos(phi1)*cos(theta1)*(cos(phi2)*sin(theta1)*sin(theta2) + cos(phi1)*cos(theta1)*cos(theta2)) + cos(theta1)*sin(phi1)*(sin(phi2)*sin(theta1)*sin(theta2) + cos(theta1)*cos(theta2)*sin(phi1)))*(sin(s*(k0^2 + tau0^2)^(1/2)) - s*(k0^2 + tau0^2)^(1/2)))/(k0^2 + tau0^2)^(3/2) - (k0*sin(phi1 - phi2)*cos(theta1)*sin(theta2)*(cos(s*(k0^2 + tau0^2)^(1/2)) - 1))/(k0^2 + tau0^2);
    Df.f1theta2 = DF1_theta2;
    Df.f2theta2 = DF2_theta2;
    Df.f3theta2 = DF3_theta2;
    
    % -- derivative of FIRST helix w.r.t phi1 --
    DF1_phi1 = (k0*tau0*cos(theta1)*(sin(s*(k0^2 + tau0^2)^(1/2)) - s*(k0^2 + tau0^2)^(1/2))*(sin(phi1)*sin(theta1)*sin(theta2) + cos(theta1)*cos(theta2)*sin(phi2) - 2*cos(phi1)^2*cos(theta1)*cos(theta2)*sin(phi2) + 2*cos(phi1)*cos(phi2)*cos(theta1)*cos(theta2)*sin(phi1)))/(k0^2 + tau0^2)^(3/2) - (k0*cos(phi1)*cos(theta1)*sin(theta2)*(cos(s*(k0^2 + tau0^2)^(1/2)) - 1))/(k0^2 + tau0^2) - (cos(theta1)*sin(phi1)*(k0^2*sin(s*(k0^2 + tau0^2)^(1/2)) + s*tau0^2*(k0^2 + tau0^2)^(1/2)))/(k0^2 + tau0^2)^(3/2);
    DF2_phi1 = (cos(phi1)*cos(theta1)*(k0^2*sin(s*(k0^2 + tau0^2)^(1/2)) + s*tau0^2*(k0^2 + tau0^2)^(1/2)))/(k0^2 + tau0^2)^(3/2) - (k0*tau0*cos(theta1)*(sin(s*(k0^2 + tau0^2)^(1/2)) - s*(k0^2 + tau0^2)^(1/2))*(cos(phi1)*sin(theta1)*sin(theta2) - cos(phi2)*cos(theta1)*cos(theta2) + 2*cos(phi1)^2*cos(phi2)*cos(theta1)*cos(theta2) + 2*cos(phi1)*cos(theta1)*cos(theta2)*sin(phi1)*sin(phi2)))/(k0^2 + tau0^2)^(3/2) - (k0*cos(theta1)*sin(phi1)*sin(theta2)*(cos(s*(k0^2 + tau0^2)^(1/2)) - 1))/(k0^2 + tau0^2);
    DF3_phi1 = (k0*cos(phi1 - phi2)*cos(theta1)*cos(theta2)*(cos(s*(k0^2 + tau0^2)^(1/2)) - 1))/(k0^2 + tau0^2) + (k0*tau0*sin(phi1 - phi2)*sin(2*theta1)*cos(theta2)*(sin(s*(k0^2 + tau0^2)^(1/2)) - s*(k0^2 + tau0^2)^(1/2)))/(2*(k0^2 + tau0^2)^(3/2));
    Df.f1phi1 = DF1_phi1;
    Df.f2phi1 = DF2_phi1;
    Df.f3phi1 = DF3_phi1;
    
    % -- derivative of FIRST helix w.r.t phi2 --
    DF1_phi2 = (k0*cos(phi2)*cos(theta2)*sin(theta1)*(cos(s*(k0^2 + tau0^2)^(1/2)) - 1))/(k0^2 + tau0^2) - (k0*tau0*cos(theta2)*(sin(s*(k0^2 + tau0^2)^(1/2)) - s*(k0^2 + tau0^2)^(1/2))*(- sin(phi2)*cos(phi1)^2*cos(theta1)^2 + cos(phi2)*sin(phi1)*cos(phi1)*cos(theta1)^2 + sin(phi2)))/(k0^2 + tau0^2)^(3/2);
    DF2_phi2 = (k0*tau0*cos(theta2)*(sin(s*(k0^2 + tau0^2)^(1/2)) - s*(k0^2 + tau0^2)^(1/2))*(cos(phi2)*cos(phi1)^2*cos(theta1)^2 + sin(phi1)*sin(phi2)*cos(phi1)*cos(theta1)^2 + cos(phi2)*sin(theta1)^2))/(k0^2 + tau0^2)^(3/2) + (k0*cos(theta2)*sin(phi2)*sin(theta1)*(cos(s*(k0^2 + tau0^2)^(1/2)) - 1))/(k0^2 + tau0^2);
    DF3_phi2 = - (k0*cos(phi1 - phi2)*cos(theta1)*cos(theta2)*(cos(s*(k0^2 + tau0^2)^(1/2)) - 1))/(k0^2 + tau0^2) - (k0*tau0*sin(phi1 - phi2)*sin(2*theta1)*cos(theta2)*(sin(s*(k0^2 + tau0^2)^(1/2)) - s*(k0^2 + tau0^2)^(1/2)))/(2*(k0^2 + tau0^2)^(3/2));
    Df.f1phi2 = DF1_phi2;
    Df.f2phi2 = DF2_phi2;
    Df.f3phi2 = DF3_phi2;

    
    % -- derivative of SECOND helix w.r.t curvature k0 --
    DG1_k0 = ((tau1^2*(s - sj))/(k1^2 + tau1^2) + (k1^2*sin((s - sj)*(k1^2 + tau1^2)^(1/2)))/(k1^2 + tau1^2)^(3/2))*((sin(sj*(k0^2 + tau0^2)^(1/2))*(cos(theta1)*sin(phi1)*sin(theta2) - cos(theta2)*sin(phi2)*sin(theta1)))/(k0^2 + tau0^2)^(1/2) - (k0^2*sin(sj*(k0^2 + tau0^2)^(1/2))*(cos(theta1)*sin(phi1)*sin(theta2) - cos(theta2)*sin(phi2)*sin(theta1)))/(k0^2 + tau0^2)^(3/2) - (tau0*(cos(sj*(k0^2 + tau0^2)^(1/2)) - 1)*(cos(phi1)^2*cos(phi2)*cos(theta1)^2*cos(theta2) - cos(phi2)*cos(theta2) + cos(phi1)*cos(theta1)*sin(theta1)*sin(theta2) + cos(phi1)*cos(theta1)^2*cos(theta2)*sin(phi1)*sin(phi2)))/(k0^2 + tau0^2) + (2*k0^2*tau0*(cos(sj*(k0^2 + tau0^2)^(1/2)) - 1)*(cos(phi1)^2*cos(phi2)*cos(theta1)^2*cos(theta2) - cos(phi2)*cos(theta2) + cos(phi1)*cos(theta1)*sin(theta1)*sin(theta2) + cos(phi1)*cos(theta1)^2*cos(theta2)*sin(phi1)*sin(phi2)))/(k0^2 + tau0^2)^2 - (k0*cos(phi1)*cos(theta1)*(2*tau0^2 - 2*tau0^2*cos(sj*(k0^2 + tau0^2)^(1/2)) + k0^2*sj*sin(sj*(k0^2 + tau0^2)^(1/2))*(k0^2 + tau0^2)^(1/2)))/(k0^2 + tau0^2)^2 + (k0^2*sj*cos(sj*(k0^2 + tau0^2)^(1/2))*(cos(theta1)*sin(phi1)*sin(theta2) - cos(theta2)*sin(phi2)*sin(theta1)))/(k0^2 + tau0^2) + (k0^2*sj*tau0*sin(sj*(k0^2 + tau0^2)^(1/2))*(cos(phi1)^2*cos(phi2)*cos(theta1)^2*cos(theta2) - cos(phi2)*cos(theta2) + cos(phi1)*cos(theta1)*sin(theta1)*sin(theta2) + cos(phi1)*cos(theta1)^2*cos(theta2)*sin(phi1)*sin(phi2)))/(k0^2 + tau0^2)^(3/2)) + ((k1*tau1*(s - sj))/(k1^2 + tau1^2) - (k1*tau1*sin((s - sj)*(k1^2 + tau1^2)^(1/2)))/(k1^2 + tau1^2)^(3/2))*((k0*tau0*sin(sj*(k0^2 + tau0^2)^(1/2))*(cos(theta1)*sin(phi1)*sin(theta2) - cos(theta2)*sin(phi2)*sin(theta1)))/(k0^2 + tau0^2)^(3/2) - (tau0*cos(phi1)*cos(theta1)*(cos(sj*(k0^2 + tau0^2)^(1/2)) - 1))/(k0^2 + tau0^2) - (k0*tau0^2*(2*cos(sj*(k0^2 + tau0^2)^(1/2)) + sj*sin(sj*(k0^2 + tau0^2)^(1/2))*(k0^2 + tau0^2)^(1/2) - 2)*(cos(phi1)^2*cos(phi2)*cos(theta1)^2*cos(theta2) - cos(phi2)*cos(theta2) + cos(phi1)*cos(theta1)*sin(theta1)*sin(theta2) + cos(phi1)*cos(theta1)^2*cos(theta2)*sin(phi1)*sin(phi2)))/(k0^2 + tau0^2)^2 - (k0*sj*tau0*cos(sj*(k0^2 + tau0^2)^(1/2))*(cos(theta1)*sin(phi1)*sin(theta2) - cos(theta2)*sin(phi2)*sin(theta1)))/(k0^2 + tau0^2) + (2*k0^2*tau0*cos(phi1)*cos(theta1)*(cos(sj*(k0^2 + tau0^2)^(1/2)) - 1))/(k0^2 + tau0^2)^2 + (k0^2*sj*tau0*sin(sj*(k0^2 + tau0^2)^(1/2))*cos(phi1)*cos(theta1))/(k0^2 + tau0^2)^(3/2)) + (k1*(cos((s - sj)*(k1^2 + tau1^2)^(1/2)) - 1)*((sin(sj*(k0^2 + tau0^2)^(1/2))*cos(phi1)*cos(theta1))/(k0^2 + tau0^2)^(1/2) + (k0*tau0*sin(sj*(k0^2 + tau0^2)^(1/2))*(cos(phi1)^2*cos(phi2)*cos(theta1)^2*cos(theta2) - cos(phi2)*cos(theta2) + cos(phi1)*cos(theta1)*sin(theta1)*sin(theta2) + cos(phi1)*cos(theta1)^2*cos(theta2)*sin(phi1)*sin(phi2)))/(k0^2 + tau0^2)^(3/2) + (k0*sj*sin(sj*(k0^2 + tau0^2)^(1/2))*(cos(theta1)*sin(phi1)*sin(theta2) - cos(theta2)*sin(phi2)*sin(theta1)))/(k0^2 + tau0^2)^(1/2) - (k0^2*sin(sj*(k0^2 + tau0^2)^(1/2))*cos(phi1)*cos(theta1))/(k0^2 + tau0^2)^(3/2) + (k0^2*sj*cos(sj*(k0^2 + tau0^2)^(1/2))*cos(phi1)*cos(theta1))/(k0^2 + tau0^2) - (k0*sj*tau0*cos(sj*(k0^2 + tau0^2)^(1/2))*(cos(phi1)^2*cos(phi2)*cos(theta1)^2*cos(theta2) - cos(phi2)*cos(theta2) + cos(phi1)*cos(theta1)*sin(theta1)*sin(theta2) + cos(phi1)*cos(theta1)^2*cos(theta2)*sin(phi1)*sin(phi2)))/(k0^2 + tau0^2)))/(k1^2 + tau1^2);
    DG2_k0 = ((k1*tau1*(s - sj))/(k1^2 + tau1^2) - (k1*tau1*sin((s - sj)*(k1^2 + tau1^2)^(1/2)))/(k1^2 + tau1^2)^(3/2))*((k0*tau0^2*(2*cos(sj*(k0^2 + tau0^2)^(1/2)) + sj*sin(sj*(k0^2 + tau0^2)^(1/2))*(k0^2 + tau0^2)^(1/2) - 2)*(cos(theta2)*sin(phi2)*cos(phi1)^2*cos(theta1)^2 - cos(phi2)*cos(theta2)*sin(phi1)*cos(phi1)*cos(theta1)^2 - sin(phi1)*sin(theta2)*cos(theta1)*sin(theta1) + cos(theta2)*sin(phi2)*sin(theta1)^2))/(k0^2 + tau0^2)^2 - (k0*tau0*sin(sj*(k0^2 + tau0^2)^(1/2))*(cos(phi1)*cos(theta1)*sin(theta2) - cos(phi2)*cos(theta2)*sin(theta1)))/(k0^2 + tau0^2)^(3/2) - (tau0*cos(theta1)*sin(phi1)*(cos(sj*(k0^2 + tau0^2)^(1/2)) - 1))/(k0^2 + tau0^2) + (2*k0^2*tau0*cos(theta1)*sin(phi1)*(cos(sj*(k0^2 + tau0^2)^(1/2)) - 1))/(k0^2 + tau0^2)^2 + (k0*sj*tau0*cos(sj*(k0^2 + tau0^2)^(1/2))*(cos(phi1)*cos(theta1)*sin(theta2) - cos(phi2)*cos(theta2)*sin(theta1)))/(k0^2 + tau0^2) + (k0^2*sj*tau0*sin(sj*(k0^2 + tau0^2)^(1/2))*cos(theta1)*sin(phi1))/(k0^2 + tau0^2)^(3/2)) - ((tau1^2*(s - sj))/(k1^2 + tau1^2) + (k1^2*sin((s - sj)*(k1^2 + tau1^2)^(1/2)))/(k1^2 + tau1^2)^(3/2))*((sin(sj*(k0^2 + tau0^2)^(1/2))*(cos(phi1)*cos(theta1)*sin(theta2) - cos(phi2)*cos(theta2)*sin(theta1)))/(k0^2 + tau0^2)^(1/2) - (tau0*(cos(sj*(k0^2 + tau0^2)^(1/2)) - 1)*(cos(theta2)*sin(phi2)*cos(phi1)^2*cos(theta1)^2 - cos(phi2)*cos(theta2)*sin(phi1)*cos(phi1)*cos(theta1)^2 - sin(phi1)*sin(theta2)*cos(theta1)*sin(theta1) + cos(theta2)*sin(phi2)*sin(theta1)^2))/(k0^2 + tau0^2) - (k0^2*sin(sj*(k0^2 + tau0^2)^(1/2))*(cos(phi1)*cos(theta1)*sin(theta2) - cos(phi2)*cos(theta2)*sin(theta1)))/(k0^2 + tau0^2)^(3/2) + (2*k0^2*tau0*(cos(sj*(k0^2 + tau0^2)^(1/2)) - 1)*(cos(theta2)*sin(phi2)*cos(phi1)^2*cos(theta1)^2 - cos(phi2)*cos(theta2)*sin(phi1)*cos(phi1)*cos(theta1)^2 - sin(phi1)*sin(theta2)*cos(theta1)*sin(theta1) + cos(theta2)*sin(phi2)*sin(theta1)^2))/(k0^2 + tau0^2)^2 + (k0^2*sj*cos(sj*(k0^2 + tau0^2)^(1/2))*(cos(phi1)*cos(theta1)*sin(theta2) - cos(phi2)*cos(theta2)*sin(theta1)))/(k0^2 + tau0^2) + (k0*cos(theta1)*sin(phi1)*(2*tau0^2 - 2*tau0^2*cos(sj*(k0^2 + tau0^2)^(1/2)) + k0^2*sj*sin(sj*(k0^2 + tau0^2)^(1/2))*(k0^2 + tau0^2)^(1/2)))/(k0^2 + tau0^2)^2 + (k0^2*sj*tau0*sin(sj*(k0^2 + tau0^2)^(1/2))*(cos(theta2)*sin(phi2)*cos(phi1)^2*cos(theta1)^2 - cos(phi2)*cos(theta2)*sin(phi1)*cos(phi1)*cos(theta1)^2 - sin(phi1)*sin(theta2)*cos(theta1)*sin(theta1) + cos(theta2)*sin(phi2)*sin(theta1)^2))/(k0^2 + tau0^2)^(3/2)) + (k1*(cos((s - sj)*(k1^2 + tau1^2)^(1/2)) - 1)*((sin(sj*(k0^2 + tau0^2)^(1/2))*cos(theta1)*sin(phi1))/(k0^2 + tau0^2)^(1/2) - (k0*tau0*sin(sj*(k0^2 + tau0^2)^(1/2))*(cos(theta2)*sin(phi2)*cos(phi1)^2*cos(theta1)^2 - cos(phi2)*cos(theta2)*sin(phi1)*cos(phi1)*cos(theta1)^2 - sin(phi1)*sin(theta2)*cos(theta1)*sin(theta1) + cos(theta2)*sin(phi2)*sin(theta1)^2))/(k0^2 + tau0^2)^(3/2) - (k0*sj*sin(sj*(k0^2 + tau0^2)^(1/2))*(cos(phi1)*cos(theta1)*sin(theta2) - cos(phi2)*cos(theta2)*sin(theta1)))/(k0^2 + tau0^2)^(1/2) - (k0^2*sin(sj*(k0^2 + tau0^2)^(1/2))*cos(theta1)*sin(phi1))/(k0^2 + tau0^2)^(3/2) + (k0^2*sj*cos(sj*(k0^2 + tau0^2)^(1/2))*cos(theta1)*sin(phi1))/(k0^2 + tau0^2) + (k0*sj*tau0*cos(sj*(k0^2 + tau0^2)^(1/2))*(cos(theta2)*sin(phi2)*cos(phi1)^2*cos(theta1)^2 - cos(phi2)*cos(theta2)*sin(phi1)*cos(phi1)*cos(theta1)^2 - sin(phi1)*sin(theta2)*cos(theta1)*sin(theta1) + cos(theta2)*sin(phi2)*sin(theta1)^2))/(k0^2 + tau0^2)))/(k1^2 + tau1^2);
    DG3_k0 = ((k1*tau1*(s - sj))/(k1^2 + tau1^2) - (k1*tau1*sin((s - sj)*(k1^2 + tau1^2)^(1/2)))/(k1^2 + tau1^2)^(3/2))*((k0*tau0^2*(cos(phi1)*cos(theta1)*(cos(phi1)*cos(theta1)*sin(theta2) - cos(phi2)*cos(theta2)*sin(theta1)) + cos(theta1)*sin(phi1)*(cos(theta1)*sin(phi1)*sin(theta2) - cos(theta2)*sin(phi2)*sin(theta1)))*(2*cos(sj*(k0^2 + tau0^2)^(1/2)) + sj*sin(sj*(k0^2 + tau0^2)^(1/2))*(k0^2 + tau0^2)^(1/2) - 2))/(k0^2 + tau0^2)^2 - (tau0*sin(theta1)*(cos(sj*(k0^2 + tau0^2)^(1/2)) - 1))/(k0^2 + tau0^2) + (2*k0^2*tau0*sin(theta1)*(cos(sj*(k0^2 + tau0^2)^(1/2)) - 1))/(k0^2 + tau0^2)^2 + (k0^2*sj*tau0*sin(sj*(k0^2 + tau0^2)^(1/2))*sin(theta1))/(k0^2 + tau0^2)^(3/2) - (k0*tau0*sin(phi1 - phi2)*sin(sj*(k0^2 + tau0^2)^(1/2))*cos(theta1)*cos(theta2))/(k0^2 + tau0^2)^(3/2) + (k0*sj*tau0*sin(phi1 - phi2)*cos(sj*(k0^2 + tau0^2)^(1/2))*cos(theta1)*cos(theta2))/(k0^2 + tau0^2)) - ((tau1^2*(s - sj))/(k1^2 + tau1^2) + (k1^2*sin((s - sj)*(k1^2 + tau1^2)^(1/2)))/(k1^2 + tau1^2)^(3/2))*((k0*sin(theta1)*(2*tau0^2 - 2*tau0^2*cos(sj*(k0^2 + tau0^2)^(1/2)) + k0^2*sj*sin(sj*(k0^2 + tau0^2)^(1/2))*(k0^2 + tau0^2)^(1/2)))/(k0^2 + tau0^2)^2 - (tau0*(cos(phi1)*cos(theta1)*(cos(phi1)*cos(theta1)*sin(theta2) - cos(phi2)*cos(theta2)*sin(theta1)) + cos(theta1)*sin(phi1)*(cos(theta1)*sin(phi1)*sin(theta2) - cos(theta2)*sin(phi2)*sin(theta1)))*(cos(sj*(k0^2 + tau0^2)^(1/2)) - 1))/(k0^2 + tau0^2) + (2*k0^2*tau0*(cos(phi1)*cos(theta1)*(cos(phi1)*cos(theta1)*sin(theta2) - cos(phi2)*cos(theta2)*sin(theta1)) + cos(theta1)*sin(phi1)*(cos(theta1)*sin(phi1)*sin(theta2) - cos(theta2)*sin(phi2)*sin(theta1)))*(cos(sj*(k0^2 + tau0^2)^(1/2)) - 1))/(k0^2 + tau0^2)^2 + (sin(phi1 - phi2)*sin(sj*(k0^2 + tau0^2)^(1/2))*cos(theta1)*cos(theta2))/(k0^2 + tau0^2)^(1/2) + (k0^2*sj*tau0*sin(sj*(k0^2 + tau0^2)^(1/2))*(cos(phi1)*cos(theta1)*(cos(phi1)*cos(theta1)*sin(theta2) - cos(phi2)*cos(theta2)*sin(theta1)) + cos(theta1)*sin(phi1)*(cos(theta1)*sin(phi1)*sin(theta2) - cos(theta2)*sin(phi2)*sin(theta1))))/(k0^2 + tau0^2)^(3/2) - (k0^2*sin(phi1 - phi2)*sin(sj*(k0^2 + tau0^2)^(1/2))*cos(theta1)*cos(theta2))/(k0^2 + tau0^2)^(3/2) + (k0^2*sj*sin(phi1 - phi2)*cos(sj*(k0^2 + tau0^2)^(1/2))*cos(theta1)*cos(theta2))/(k0^2 + tau0^2)) + (k1*(cos((s - sj)*(k1^2 + tau1^2)^(1/2)) - 1)*((sin(sj*(k0^2 + tau0^2)^(1/2))*sin(theta1))/(k0^2 + tau0^2)^(1/2) - (k0^2*sin(sj*(k0^2 + tau0^2)^(1/2))*sin(theta1))/(k0^2 + tau0^2)^(3/2) - (k0*tau0*sin(sj*(k0^2 + tau0^2)^(1/2))*(cos(phi1)*cos(theta1)*(cos(phi1)*cos(theta1)*sin(theta2) - cos(phi2)*cos(theta2)*sin(theta1)) + cos(theta1)*sin(phi1)*(cos(theta1)*sin(phi1)*sin(theta2) - cos(theta2)*sin(phi2)*sin(theta1))))/(k0^2 + tau0^2)^(3/2) + (k0^2*sj*cos(sj*(k0^2 + tau0^2)^(1/2))*sin(theta1))/(k0^2 + tau0^2) + (k0*sj*tau0*cos(sj*(k0^2 + tau0^2)^(1/2))*(cos(phi1)*cos(theta1)*(cos(phi1)*cos(theta1)*sin(theta2) - cos(phi2)*cos(theta2)*sin(theta1)) + cos(theta1)*sin(phi1)*(cos(theta1)*sin(phi1)*sin(theta2) - cos(theta2)*sin(phi2)*sin(theta1))))/(k0^2 + tau0^2) - (k0*sj*sin(phi1 - phi2)*sin(sj*(k0^2 + tau0^2)^(1/2))*cos(theta1)*cos(theta2))/(k0^2 + tau0^2)^(1/2)))/(k1^2 + tau1^2);
    Df.g1k0 = DG1_k0;
    Df.g2k0 = DG2_k0;
    Df.g3k0 = DG3_k0;
    
    % -- derivative of SECOND helix w.r.t torsion tau0 --
    DG1_tau0 = - ((k1*tau1*(s - sj))/(k1^2 + tau1^2) - (k1*tau1*sin((s - sj)*(k1^2 + tau1^2)^(1/2)))/(k1^2 + tau1^2)^(3/2))*((sin(sj*(k0^2 + tau0^2)^(1/2))*(cos(theta1)*sin(phi1)*sin(theta2) - cos(theta2)*sin(phi2)*sin(theta1)))/(k0^2 + tau0^2)^(1/2) - (tau0^2*sin(sj*(k0^2 + tau0^2)^(1/2))*(cos(theta1)*sin(phi1)*sin(theta2) - cos(theta2)*sin(phi2)*sin(theta1)))/(k0^2 + tau0^2)^(3/2) + (tau0*(2*k0^2 - 2*k0^2*cos(sj*(k0^2 + tau0^2)^(1/2)) + sj*tau0^2*sin(sj*(k0^2 + tau0^2)^(1/2))*(k0^2 + tau0^2)^(1/2))*(cos(phi1)^2*cos(phi2)*cos(theta1)^2*cos(theta2) - cos(phi2)*cos(theta2) + cos(phi1)*cos(theta1)*sin(theta1)*sin(theta2) + cos(phi1)*cos(theta1)^2*cos(theta2)*sin(phi1)*sin(phi2)))/(k0^2 + tau0^2)^2 + (k0*cos(phi1)*cos(theta1)*(cos(sj*(k0^2 + tau0^2)^(1/2)) - 1))/(k0^2 + tau0^2) + (sj*tau0^2*cos(sj*(k0^2 + tau0^2)^(1/2))*(cos(theta1)*sin(phi1)*sin(theta2) - cos(theta2)*sin(phi2)*sin(theta1)))/(k0^2 + tau0^2) - (2*k0*tau0^2*cos(phi1)*cos(theta1)*(cos(sj*(k0^2 + tau0^2)^(1/2)) - 1))/(k0^2 + tau0^2)^2 - (k0*sj*tau0^2*sin(sj*(k0^2 + tau0^2)^(1/2))*cos(phi1)*cos(theta1))/(k0^2 + tau0^2)^(3/2)) - ((tau1^2*(s - sj))/(k1^2 + tau1^2) + (k1^2*sin((s - sj)*(k1^2 + tau1^2)^(1/2)))/(k1^2 + tau1^2)^(3/2))*((k0*(cos(sj*(k0^2 + tau0^2)^(1/2)) - 1)*(cos(phi1)^2*cos(phi2)*cos(theta1)^2*cos(theta2) - cos(phi2)*cos(theta2) + cos(phi1)*cos(theta1)*sin(theta1)*sin(theta2) + cos(phi1)*cos(theta1)^2*cos(theta2)*sin(phi1)*sin(phi2)))/(k0^2 + tau0^2) + (k0*tau0*sin(sj*(k0^2 + tau0^2)^(1/2))*(cos(theta1)*sin(phi1)*sin(theta2) - cos(theta2)*sin(phi2)*sin(theta1)))/(k0^2 + tau0^2)^(3/2) - (2*k0*tau0^2*(cos(sj*(k0^2 + tau0^2)^(1/2)) - 1)*(cos(phi1)^2*cos(phi2)*cos(theta1)^2*cos(theta2) - cos(phi2)*cos(theta2) + cos(phi1)*cos(theta1)*sin(theta1)*sin(theta2) + cos(phi1)*cos(theta1)^2*cos(theta2)*sin(phi1)*sin(phi2)))/(k0^2 + tau0^2)^2 - (k0*sj*tau0*cos(sj*(k0^2 + tau0^2)^(1/2))*(cos(theta1)*sin(phi1)*sin(theta2) - cos(theta2)*sin(phi2)*sin(theta1)))/(k0^2 + tau0^2) + (k0^2*tau0*cos(phi1)*cos(theta1)*(2*cos(sj*(k0^2 + tau0^2)^(1/2)) + sj*sin(sj*(k0^2 + tau0^2)^(1/2))*(k0^2 + tau0^2)^(1/2) - 2))/(k0^2 + tau0^2)^2 - (k0*sj*tau0^2*sin(sj*(k0^2 + tau0^2)^(1/2))*(cos(phi1)^2*cos(phi2)*cos(theta1)^2*cos(theta2) - cos(phi2)*cos(theta2) + cos(phi1)*cos(theta1)*sin(theta1)*sin(theta2) + cos(phi1)*cos(theta1)^2*cos(theta2)*sin(phi1)*sin(phi2)))/(k0^2 + tau0^2)^(3/2)) - (k1*(cos((s - sj)*(k1^2 + tau1^2)^(1/2)) - 1)*((sin(sj*(k0^2 + tau0^2)^(1/2))*(cos(phi1)^2*cos(phi2)*cos(theta1)^2*cos(theta2) - cos(phi2)*cos(theta2) + cos(phi1)*cos(theta1)*sin(theta1)*sin(theta2) + cos(phi1)*cos(theta1)^2*cos(theta2)*sin(phi1)*sin(phi2)))/(k0^2 + tau0^2)^(1/2) - (tau0^2*sin(sj*(k0^2 + tau0^2)^(1/2))*(cos(phi1)^2*cos(phi2)*cos(theta1)^2*cos(theta2) - cos(phi2)*cos(theta2) + cos(phi1)*cos(theta1)*sin(theta1)*sin(theta2) + cos(phi1)*cos(theta1)^2*cos(theta2)*sin(phi1)*sin(phi2)))/(k0^2 + tau0^2)^(3/2) + (sj*tau0^2*cos(sj*(k0^2 + tau0^2)^(1/2))*(cos(phi1)^2*cos(phi2)*cos(theta1)^2*cos(theta2) - cos(phi2)*cos(theta2) + cos(phi1)*cos(theta1)*sin(theta1)*sin(theta2) + cos(phi1)*cos(theta1)^2*cos(theta2)*sin(phi1)*sin(phi2)))/(k0^2 + tau0^2) - (sj*tau0*sin(sj*(k0^2 + tau0^2)^(1/2))*(cos(theta1)*sin(phi1)*sin(theta2) - cos(theta2)*sin(phi2)*sin(theta1)))/(k0^2 + tau0^2)^(1/2) + (k0*tau0*sin(sj*(k0^2 + tau0^2)^(1/2))*cos(phi1)*cos(theta1))/(k0^2 + tau0^2)^(3/2) - (k0*sj*tau0*cos(sj*(k0^2 + tau0^2)^(1/2))*cos(phi1)*cos(theta1))/(k0^2 + tau0^2)))/(k1^2 + tau1^2);
    DG2_tau0 = ((k1*tau1*(s - sj))/(k1^2 + tau1^2) - (k1*tau1*sin((s - sj)*(k1^2 + tau1^2)^(1/2)))/(k1^2 + tau1^2)^(3/2))*((sin(sj*(k0^2 + tau0^2)^(1/2))*(cos(phi1)*cos(theta1)*sin(theta2) - cos(phi2)*cos(theta2)*sin(theta1)))/(k0^2 + tau0^2)^(1/2) + (tau0*(2*k0^2 - 2*k0^2*cos(sj*(k0^2 + tau0^2)^(1/2)) + sj*tau0^2*sin(sj*(k0^2 + tau0^2)^(1/2))*(k0^2 + tau0^2)^(1/2))*(cos(theta2)*sin(phi2)*cos(phi1)^2*cos(theta1)^2 - cos(phi2)*cos(theta2)*sin(phi1)*cos(phi1)*cos(theta1)^2 - sin(phi1)*sin(theta2)*cos(theta1)*sin(theta1) + cos(theta2)*sin(phi2)*sin(theta1)^2))/(k0^2 + tau0^2)^2 - (tau0^2*sin(sj*(k0^2 + tau0^2)^(1/2))*(cos(phi1)*cos(theta1)*sin(theta2) - cos(phi2)*cos(theta2)*sin(theta1)))/(k0^2 + tau0^2)^(3/2) - (k0*cos(theta1)*sin(phi1)*(cos(sj*(k0^2 + tau0^2)^(1/2)) - 1))/(k0^2 + tau0^2) + (sj*tau0^2*cos(sj*(k0^2 + tau0^2)^(1/2))*(cos(phi1)*cos(theta1)*sin(theta2) - cos(phi2)*cos(theta2)*sin(theta1)))/(k0^2 + tau0^2) + (2*k0*tau0^2*cos(theta1)*sin(phi1)*(cos(sj*(k0^2 + tau0^2)^(1/2)) - 1))/(k0^2 + tau0^2)^2 + (k0*sj*tau0^2*sin(sj*(k0^2 + tau0^2)^(1/2))*cos(theta1)*sin(phi1))/(k0^2 + tau0^2)^(3/2)) - ((tau1^2*(s - sj))/(k1^2 + tau1^2) + (k1^2*sin((s - sj)*(k1^2 + tau1^2)^(1/2)))/(k1^2 + tau1^2)^(3/2))*((2*k0*tau0^2*(cos(sj*(k0^2 + tau0^2)^(1/2)) - 1)*(cos(theta2)*sin(phi2)*cos(phi1)^2*cos(theta1)^2 - cos(phi2)*cos(theta2)*sin(phi1)*cos(phi1)*cos(theta1)^2 - sin(phi1)*sin(theta2)*cos(theta1)*sin(theta1) + cos(theta2)*sin(phi2)*sin(theta1)^2))/(k0^2 + tau0^2)^2 - (k0*(cos(sj*(k0^2 + tau0^2)^(1/2)) - 1)*(cos(theta2)*sin(phi2)*cos(phi1)^2*cos(theta1)^2 - cos(phi2)*cos(theta2)*sin(phi1)*cos(phi1)*cos(theta1)^2 - sin(phi1)*sin(theta2)*cos(theta1)*sin(theta1) + cos(theta2)*sin(phi2)*sin(theta1)^2))/(k0^2 + tau0^2) - (k0*tau0*sin(sj*(k0^2 + tau0^2)^(1/2))*(cos(phi1)*cos(theta1)*sin(theta2) - cos(phi2)*cos(theta2)*sin(theta1)))/(k0^2 + tau0^2)^(3/2) + (k0*sj*tau0^2*sin(sj*(k0^2 + tau0^2)^(1/2))*(cos(theta2)*sin(phi2)*cos(phi1)^2*cos(theta1)^2 - cos(phi2)*cos(theta2)*sin(phi1)*cos(phi1)*cos(theta1)^2 - sin(phi1)*sin(theta2)*cos(theta1)*sin(theta1) + cos(theta2)*sin(phi2)*sin(theta1)^2))/(k0^2 + tau0^2)^(3/2) + (k0^2*tau0*cos(theta1)*sin(phi1)*(2*cos(sj*(k0^2 + tau0^2)^(1/2)) + sj*sin(sj*(k0^2 + tau0^2)^(1/2))*(k0^2 + tau0^2)^(1/2) - 2))/(k0^2 + tau0^2)^2 + (k0*sj*tau0*cos(sj*(k0^2 + tau0^2)^(1/2))*(cos(phi1)*cos(theta1)*sin(theta2) - cos(phi2)*cos(theta2)*sin(theta1)))/(k0^2 + tau0^2)) + (k1*(cos((s - sj)*(k1^2 + tau1^2)^(1/2)) - 1)*((sin(sj*(k0^2 + tau0^2)^(1/2))*(cos(theta2)*sin(phi2)*cos(phi1)^2*cos(theta1)^2 - cos(phi2)*cos(theta2)*sin(phi1)*cos(phi1)*cos(theta1)^2 - sin(phi1)*sin(theta2)*cos(theta1)*sin(theta1) + cos(theta2)*sin(phi2)*sin(theta1)^2))/(k0^2 + tau0^2)^(1/2) - (tau0^2*sin(sj*(k0^2 + tau0^2)^(1/2))*(cos(theta2)*sin(phi2)*cos(phi1)^2*cos(theta1)^2 - cos(phi2)*cos(theta2)*sin(phi1)*cos(phi1)*cos(theta1)^2 - sin(phi1)*sin(theta2)*cos(theta1)*sin(theta1) + cos(theta2)*sin(phi2)*sin(theta1)^2))/(k0^2 + tau0^2)^(3/2) - (sj*tau0*sin(sj*(k0^2 + tau0^2)^(1/2))*(cos(phi1)*cos(theta1)*sin(theta2) - cos(phi2)*cos(theta2)*sin(theta1)))/(k0^2 + tau0^2)^(1/2) + (sj*tau0^2*cos(sj*(k0^2 + tau0^2)^(1/2))*(cos(theta2)*sin(phi2)*cos(phi1)^2*cos(theta1)^2 - cos(phi2)*cos(theta2)*sin(phi1)*cos(phi1)*cos(theta1)^2 - sin(phi1)*sin(theta2)*cos(theta1)*sin(theta1) + cos(theta2)*sin(phi2)*sin(theta1)^2))/(k0^2 + tau0^2) - (k0*tau0*sin(sj*(k0^2 + tau0^2)^(1/2))*cos(theta1)*sin(phi1))/(k0^2 + tau0^2)^(3/2) + (k0*sj*tau0*cos(sj*(k0^2 + tau0^2)^(1/2))*cos(theta1)*sin(phi1))/(k0^2 + tau0^2)))/(k1^2 + tau1^2);
    DG3_tau0 = ((k1*tau1*(s - sj))/(k1^2 + tau1^2) - (k1*tau1*sin((s - sj)*(k1^2 + tau1^2)^(1/2)))/(k1^2 + tau1^2)^(3/2))*((tau0*(cos(phi1)*cos(theta1)*(cos(phi1)*cos(theta1)*sin(theta2) - cos(phi2)*cos(theta2)*sin(theta1)) + cos(theta1)*sin(phi1)*(cos(theta1)*sin(phi1)*sin(theta2) - cos(theta2)*sin(phi2)*sin(theta1)))*(2*k0^2 - 2*k0^2*cos(sj*(k0^2 + tau0^2)^(1/2)) + sj*tau0^2*sin(sj*(k0^2 + tau0^2)^(1/2))*(k0^2 + tau0^2)^(1/2)))/(k0^2 + tau0^2)^2 - (k0*sin(theta1)*(cos(sj*(k0^2 + tau0^2)^(1/2)) - 1))/(k0^2 + tau0^2) + (sin(phi1 - phi2)*sin(sj*(k0^2 + tau0^2)^(1/2))*cos(theta1)*cos(theta2))/(k0^2 + tau0^2)^(1/2) + (2*k0*tau0^2*sin(theta1)*(cos(sj*(k0^2 + tau0^2)^(1/2)) - 1))/(k0^2 + tau0^2)^2 - (tau0^2*sin(phi1 - phi2)*sin(sj*(k0^2 + tau0^2)^(1/2))*cos(theta1)*cos(theta2))/(k0^2 + tau0^2)^(3/2) + (k0*sj*tau0^2*sin(sj*(k0^2 + tau0^2)^(1/2))*sin(theta1))/(k0^2 + tau0^2)^(3/2) + (sj*tau0^2*sin(phi1 - phi2)*cos(sj*(k0^2 + tau0^2)^(1/2))*cos(theta1)*cos(theta2))/(k0^2 + tau0^2)) - ((tau1^2*(s - sj))/(k1^2 + tau1^2) + (k1^2*sin((s - sj)*(k1^2 + tau1^2)^(1/2)))/(k1^2 + tau1^2)^(3/2))*((k0^2*tau0*sin(theta1)*(2*cos(sj*(k0^2 + tau0^2)^(1/2)) + sj*sin(sj*(k0^2 + tau0^2)^(1/2))*(k0^2 + tau0^2)^(1/2) - 2))/(k0^2 + tau0^2)^2 - (k0*(cos(phi1)*cos(theta1)*(cos(phi1)*cos(theta1)*sin(theta2) - cos(phi2)*cos(theta2)*sin(theta1)) + cos(theta1)*sin(phi1)*(cos(theta1)*sin(phi1)*sin(theta2) - cos(theta2)*sin(phi2)*sin(theta1)))*(cos(sj*(k0^2 + tau0^2)^(1/2)) - 1))/(k0^2 + tau0^2) + (2*k0*tau0^2*(cos(phi1)*cos(theta1)*(cos(phi1)*cos(theta1)*sin(theta2) - cos(phi2)*cos(theta2)*sin(theta1)) + cos(theta1)*sin(phi1)*(cos(theta1)*sin(phi1)*sin(theta2) - cos(theta2)*sin(phi2)*sin(theta1)))*(cos(sj*(k0^2 + tau0^2)^(1/2)) - 1))/(k0^2 + tau0^2)^2 + (k0*sj*tau0^2*sin(sj*(k0^2 + tau0^2)^(1/2))*(cos(phi1)*cos(theta1)*(cos(phi1)*cos(theta1)*sin(theta2) - cos(phi2)*cos(theta2)*sin(theta1)) + cos(theta1)*sin(phi1)*(cos(theta1)*sin(phi1)*sin(theta2) - cos(theta2)*sin(phi2)*sin(theta1))))/(k0^2 + tau0^2)^(3/2) - (k0*tau0*sin(phi1 - phi2)*sin(sj*(k0^2 + tau0^2)^(1/2))*cos(theta1)*cos(theta2))/(k0^2 + tau0^2)^(3/2) + (k0*sj*tau0*sin(phi1 - phi2)*cos(sj*(k0^2 + tau0^2)^(1/2))*cos(theta1)*cos(theta2))/(k0^2 + tau0^2)) + (k1*(cos((s - sj)*(k1^2 + tau1^2)^(1/2)) - 1)*((sin(sj*(k0^2 + tau0^2)^(1/2))*(cos(phi1)*cos(theta1)*(cos(phi1)*cos(theta1)*sin(theta2) - cos(phi2)*cos(theta2)*sin(theta1)) + cos(theta1)*sin(phi1)*(cos(theta1)*sin(phi1)*sin(theta2) - cos(theta2)*sin(phi2)*sin(theta1))))/(k0^2 + tau0^2)^(1/2) - (tau0^2*sin(sj*(k0^2 + tau0^2)^(1/2))*(cos(phi1)*cos(theta1)*(cos(phi1)*cos(theta1)*sin(theta2) - cos(phi2)*cos(theta2)*sin(theta1)) + cos(theta1)*sin(phi1)*(cos(theta1)*sin(phi1)*sin(theta2) - cos(theta2)*sin(phi2)*sin(theta1))))/(k0^2 + tau0^2)^(3/2) - (k0*tau0*sin(sj*(k0^2 + tau0^2)^(1/2))*sin(theta1))/(k0^2 + tau0^2)^(3/2) + (sj*tau0^2*cos(sj*(k0^2 + tau0^2)^(1/2))*(cos(phi1)*cos(theta1)*(cos(phi1)*cos(theta1)*sin(theta2) - cos(phi2)*cos(theta2)*sin(theta1)) + cos(theta1)*sin(phi1)*(cos(theta1)*sin(phi1)*sin(theta2) - cos(theta2)*sin(phi2)*sin(theta1))))/(k0^2 + tau0^2) + (k0*sj*tau0*cos(sj*(k0^2 + tau0^2)^(1/2))*sin(theta1))/(k0^2 + tau0^2) - (sj*tau0*sin(phi1 - phi2)*sin(sj*(k0^2 + tau0^2)^(1/2))*cos(theta1)*cos(theta2))/(k0^2 + tau0^2)^(1/2)))/(k1^2 + tau1^2);
    Df.g1t0 = DG1_tau0;
    Df.g2t0 = DG2_tau0;
    Df.g3t0 = DG3_tau0;
    
    % -- derivative of SECOND helix w.r.t curvature k1 --
    DG1_k1 = ((tau0*sin(sj*(k0^2 + tau0^2)^(1/2))*(cos(theta1)*sin(phi1)*sin(theta2) - cos(theta2)*sin(phi2)*sin(theta1)))/(k0^2 + tau0^2)^(1/2) - (k0^2/(k0^2 + tau0^2) + (tau0^2*cos(sj*(k0^2 + tau0^2)^(1/2)))/(k0^2 + tau0^2))*(sin(theta1)*(cos(phi1)*cos(theta1)*sin(theta2) - cos(phi2)*cos(theta2)*sin(theta1)) + cos(theta1)*sin(phi1)*(cos(phi1)*cos(theta1)*cos(theta2)*sin(phi2) - cos(phi2)*cos(theta1)*cos(theta2)*sin(phi1))) + (k0*tau0*cos(phi1)*cos(theta1)*(cos(sj*(k0^2 + tau0^2)^(1/2)) - 1))/(k0^2 + tau0^2))*((tau1*sin((s - sj)*(k1^2 + tau1^2)^(1/2)))/(k1^2 + tau1^2)^(3/2) - (tau1*(s - sj))/(k1^2 + tau1^2) + (2*k1^2*tau1*(s - sj))/(k1^2 + tau1^2)^2 - (3*k1^2*tau1*sin((s - sj)*(k1^2 + tau1^2)^(1/2)))/(k1^2 + tau1^2)^(5/2) + (k1^2*tau1*cos((s - sj)*(k1^2 + tau1^2)^(1/2))*(s - sj))/(k1^2 + tau1^2)^2) - (cos(phi1)*cos(theta1)*(tau0^2/(k0^2 + tau0^2) + (k0^2*cos(sj*(k0^2 + tau0^2)^(1/2)))/(k0^2 + tau0^2)) + (k0*sin(sj*(k0^2 + tau0^2)^(1/2))*(cos(theta1)*sin(phi1)*sin(theta2) - cos(theta2)*sin(phi2)*sin(theta1)))/(k0^2 + tau0^2)^(1/2) - (k0*tau0*(cos(sj*(k0^2 + tau0^2)^(1/2)) - 1)*(sin(theta1)*(cos(phi1)*cos(theta1)*sin(theta2) - cos(phi2)*cos(theta2)*sin(theta1)) + cos(theta1)*sin(phi1)*(cos(phi1)*cos(theta1)*cos(theta2)*sin(phi2) - cos(phi2)*cos(theta1)*cos(theta2)*sin(phi1))))/(k0^2 + tau0^2))*((3*k1^3*sin((s - sj)*(k1^2 + tau1^2)^(1/2)))/(k1^2 + tau1^2)^(5/2) - (2*k1*sin((s - sj)*(k1^2 + tau1^2)^(1/2)))/(k1^2 + tau1^2)^(3/2) + (2*k1*tau1^2*(s - sj))/(k1^2 + tau1^2)^2 - (k1^3*cos((s - sj)*(k1^2 + tau1^2)^(1/2))*(s - sj))/(k1^2 + tau1^2)^2) - ((cos((s - sj)*(k1^2 + tau1^2)^(1/2)) - 1)*(cos(sj*(k0^2 + tau0^2)^(1/2))*(cos(theta1)*sin(phi1)*sin(theta2) - cos(theta2)*sin(phi2)*sin(theta1)) + (tau0*sin(sj*(k0^2 + tau0^2)^(1/2))*(sin(theta1)*(cos(phi1)*cos(theta1)*sin(theta2) - cos(phi2)*cos(theta2)*sin(theta1)) + cos(theta1)*sin(phi1)*(cos(phi1)*cos(theta1)*cos(theta2)*sin(phi2) - cos(phi2)*cos(theta1)*cos(theta2)*sin(phi1))))/(k0^2 + tau0^2)^(1/2) - (k0*sin(sj*(k0^2 + tau0^2)^(1/2))*cos(phi1)*cos(theta1))/(k0^2 + tau0^2)^(1/2)))/(k1^2 + tau1^2) + (2*k1^2*(cos((s - sj)*(k1^2 + tau1^2)^(1/2)) - 1)*(cos(sj*(k0^2 + tau0^2)^(1/2))*(cos(theta1)*sin(phi1)*sin(theta2) - cos(theta2)*sin(phi2)*sin(theta1)) + (tau0*sin(sj*(k0^2 + tau0^2)^(1/2))*(sin(theta1)*(cos(phi1)*cos(theta1)*sin(theta2) - cos(phi2)*cos(theta2)*sin(theta1)) + cos(theta1)*sin(phi1)*(cos(phi1)*cos(theta1)*cos(theta2)*sin(phi2) - cos(phi2)*cos(theta1)*cos(theta2)*sin(phi1))))/(k0^2 + tau0^2)^(1/2) - (k0*sin(sj*(k0^2 + tau0^2)^(1/2))*cos(phi1)*cos(theta1))/(k0^2 + tau0^2)^(1/2)))/(k1^2 + tau1^2)^2 + (k1^2*sin((s - sj)*(k1^2 + tau1^2)^(1/2))*(s - sj)*(cos(sj*(k0^2 + tau0^2)^(1/2))*(cos(theta1)*sin(phi1)*sin(theta2) - cos(theta2)*sin(phi2)*sin(theta1)) + (tau0*sin(sj*(k0^2 + tau0^2)^(1/2))*(sin(theta1)*(cos(phi1)*cos(theta1)*sin(theta2) - cos(phi2)*cos(theta2)*sin(theta1)) + cos(theta1)*sin(phi1)*(cos(phi1)*cos(theta1)*cos(theta2)*sin(phi2) - cos(phi2)*cos(theta1)*cos(theta2)*sin(phi1))))/(k0^2 + tau0^2)^(1/2) - (k0*sin(sj*(k0^2 + tau0^2)^(1/2))*cos(phi1)*cos(theta1))/(k0^2 + tau0^2)^(1/2)))/(k1^2 + tau1^2)^(3/2);
    DG2_k1 = ((k0*sin(sj*(k0^2 + tau0^2)^(1/2))*(cos(phi1)*cos(theta1)*sin(theta2) - cos(phi2)*cos(theta2)*sin(theta1)))/(k0^2 + tau0^2)^(1/2) - cos(theta1)*sin(phi1)*(tau0^2/(k0^2 + tau0^2) + (k0^2*cos(sj*(k0^2 + tau0^2)^(1/2)))/(k0^2 + tau0^2)) + (k0*tau0*(sin(theta1)*(cos(theta1)*sin(phi1)*sin(theta2) - cos(theta2)*sin(phi2)*sin(theta1)) - cos(phi1)*cos(theta1)*(cos(phi1)*cos(theta1)*cos(theta2)*sin(phi2) - cos(phi2)*cos(theta1)*cos(theta2)*sin(phi1)))*(cos(sj*(k0^2 + tau0^2)^(1/2)) - 1))/(k0^2 + tau0^2))*((3*k1^3*sin((s - sj)*(k1^2 + tau1^2)^(1/2)))/(k1^2 + tau1^2)^(5/2) - (2*k1*sin((s - sj)*(k1^2 + tau1^2)^(1/2)))/(k1^2 + tau1^2)^(3/2) + (2*k1*tau1^2*(s - sj))/(k1^2 + tau1^2)^2 - (k1^3*cos((s - sj)*(k1^2 + tau1^2)^(1/2))*(s - sj))/(k1^2 + tau1^2)^2) - ((sin(theta1)*(cos(theta1)*sin(phi1)*sin(theta2) - cos(theta2)*sin(phi2)*sin(theta1)) - cos(phi1)*cos(theta1)*(cos(phi1)*cos(theta1)*cos(theta2)*sin(phi2) - cos(phi2)*cos(theta1)*cos(theta2)*sin(phi1)))*(k0^2/(k0^2 + tau0^2) + (tau0^2*cos(sj*(k0^2 + tau0^2)^(1/2)))/(k0^2 + tau0^2)) + (tau0*sin(sj*(k0^2 + tau0^2)^(1/2))*(cos(phi1)*cos(theta1)*sin(theta2) - cos(phi2)*cos(theta2)*sin(theta1)))/(k0^2 + tau0^2)^(1/2) - (k0*tau0*cos(theta1)*sin(phi1)*(cos(sj*(k0^2 + tau0^2)^(1/2)) - 1))/(k0^2 + tau0^2))*((tau1*sin((s - sj)*(k1^2 + tau1^2)^(1/2)))/(k1^2 + tau1^2)^(3/2) - (tau1*(s - sj))/(k1^2 + tau1^2) + (2*k1^2*tau1*(s - sj))/(k1^2 + tau1^2)^2 - (3*k1^2*tau1*sin((s - sj)*(k1^2 + tau1^2)^(1/2)))/(k1^2 + tau1^2)^(5/2) + (k1^2*tau1*cos((s - sj)*(k1^2 + tau1^2)^(1/2))*(s - sj))/(k1^2 + tau1^2)^2) + ((cos((s - sj)*(k1^2 + tau1^2)^(1/2)) - 1)*(cos(sj*(k0^2 + tau0^2)^(1/2))*(cos(phi1)*cos(theta1)*sin(theta2) - cos(phi2)*cos(theta2)*sin(theta1)) - (tau0*sin(sj*(k0^2 + tau0^2)^(1/2))*(sin(theta1)*(cos(theta1)*sin(phi1)*sin(theta2) - cos(theta2)*sin(phi2)*sin(theta1)) - cos(phi1)*cos(theta1)*(cos(phi1)*cos(theta1)*cos(theta2)*sin(phi2) - cos(phi2)*cos(theta1)*cos(theta2)*sin(phi1))))/(k0^2 + tau0^2)^(1/2) + (k0*sin(sj*(k0^2 + tau0^2)^(1/2))*cos(theta1)*sin(phi1))/(k0^2 + tau0^2)^(1/2)))/(k1^2 + tau1^2) - (2*k1^2*(cos((s - sj)*(k1^2 + tau1^2)^(1/2)) - 1)*(cos(sj*(k0^2 + tau0^2)^(1/2))*(cos(phi1)*cos(theta1)*sin(theta2) - cos(phi2)*cos(theta2)*sin(theta1)) - (tau0*sin(sj*(k0^2 + tau0^2)^(1/2))*(sin(theta1)*(cos(theta1)*sin(phi1)*sin(theta2) - cos(theta2)*sin(phi2)*sin(theta1)) - cos(phi1)*cos(theta1)*(cos(phi1)*cos(theta1)*cos(theta2)*sin(phi2) - cos(phi2)*cos(theta1)*cos(theta2)*sin(phi1))))/(k0^2 + tau0^2)^(1/2) + (k0*sin(sj*(k0^2 + tau0^2)^(1/2))*cos(theta1)*sin(phi1))/(k0^2 + tau0^2)^(1/2)))/(k1^2 + tau1^2)^2 - (k1^2*sin((s - sj)*(k1^2 + tau1^2)^(1/2))*(s - sj)*(cos(sj*(k0^2 + tau0^2)^(1/2))*(cos(phi1)*cos(theta1)*sin(theta2) - cos(phi2)*cos(theta2)*sin(theta1)) - (tau0*sin(sj*(k0^2 + tau0^2)^(1/2))*(sin(theta1)*(cos(theta1)*sin(phi1)*sin(theta2) - cos(theta2)*sin(phi2)*sin(theta1)) - cos(phi1)*cos(theta1)*(cos(phi1)*cos(theta1)*cos(theta2)*sin(phi2) - cos(phi2)*cos(theta1)*cos(theta2)*sin(phi1))))/(k0^2 + tau0^2)^(1/2) + (k0*sin(sj*(k0^2 + tau0^2)^(1/2))*cos(theta1)*sin(phi1))/(k0^2 + tau0^2)^(1/2)))/(k1^2 + tau1^2)^(3/2);
    DG3_k1 = (((cos(phi1)*cos(theta1)*(cos(phi1)*cos(theta1)*sin(theta2) - cos(phi2)*cos(theta2)*sin(theta1)) + cos(theta1)*sin(phi1)*(cos(theta1)*sin(phi1)*sin(theta2) - cos(theta2)*sin(phi2)*sin(theta1)))*(tau0^2*cos(sj*(k0^2 + tau0^2)^(1/2)) + k0^2))/(k0^2 + tau0^2) + (k0*tau0*sin(theta1)*(cos(sj*(k0^2 + tau0^2)^(1/2)) - 1))/(k0^2 + tau0^2) - (tau0*sin(phi1 - phi2)*sin(sj*(k0^2 + tau0^2)^(1/2))*cos(theta1)*cos(theta2))/(k0^2 + tau0^2)^(1/2))*((tau1*sin((s - sj)*(k1^2 + tau1^2)^(1/2)))/(k1^2 + tau1^2)^(3/2) - (tau1*(s - sj))/(k1^2 + tau1^2) + (2*k1^2*tau1*(s - sj))/(k1^2 + tau1^2)^2 - (3*k1^2*tau1*sin((s - sj)*(k1^2 + tau1^2)^(1/2)))/(k1^2 + tau1^2)^(5/2) + (k1^2*tau1*cos((s - sj)*(k1^2 + tau1^2)^(1/2))*(s - sj))/(k1^2 + tau1^2)^2) - ((sin(theta1)*(k0^2*cos(sj*(k0^2 + tau0^2)^(1/2)) + tau0^2))/(k0^2 + tau0^2) + (k0*tau0*(cos(phi1)*cos(theta1)*(cos(phi1)*cos(theta1)*sin(theta2) - cos(phi2)*cos(theta2)*sin(theta1)) + cos(theta1)*sin(phi1)*(cos(theta1)*sin(phi1)*sin(theta2) - cos(theta2)*sin(phi2)*sin(theta1)))*(cos(sj*(k0^2 + tau0^2)^(1/2)) - 1))/(k0^2 + tau0^2) - (k0*sin(phi1 - phi2)*sin(sj*(k0^2 + tau0^2)^(1/2))*cos(theta1)*cos(theta2))/(k0^2 + tau0^2)^(1/2))*((3*k1^3*sin((s - sj)*(k1^2 + tau1^2)^(1/2)))/(k1^2 + tau1^2)^(5/2) - (2*k1*sin((s - sj)*(k1^2 + tau1^2)^(1/2)))/(k1^2 + tau1^2)^(3/2) + (2*k1*tau1^2*(s - sj))/(k1^2 + tau1^2)^2 - (k1^3*cos((s - sj)*(k1^2 + tau1^2)^(1/2))*(s - sj))/(k1^2 + tau1^2)^2) + ((cos((s - sj)*(k1^2 + tau1^2)^(1/2)) - 1)*((tau0*sin(sj*(k0^2 + tau0^2)^(1/2))*(cos(phi1)*cos(theta1)*(cos(phi1)*cos(theta1)*sin(theta2) - cos(phi2)*cos(theta2)*sin(theta1)) + cos(theta1)*sin(phi1)*(cos(theta1)*sin(phi1)*sin(theta2) - cos(theta2)*sin(phi2)*sin(theta1))))/(k0^2 + tau0^2)^(1/2) + (k0*sin(sj*(k0^2 + tau0^2)^(1/2))*sin(theta1))/(k0^2 + tau0^2)^(1/2) + sin(phi1 - phi2)*cos(sj*(k0^2 + tau0^2)^(1/2))*cos(theta1)*cos(theta2)))/(k1^2 + tau1^2) - (2*k1^2*(cos((s - sj)*(k1^2 + tau1^2)^(1/2)) - 1)*((tau0*sin(sj*(k0^2 + tau0^2)^(1/2))*(cos(phi1)*cos(theta1)*(cos(phi1)*cos(theta1)*sin(theta2) - cos(phi2)*cos(theta2)*sin(theta1)) + cos(theta1)*sin(phi1)*(cos(theta1)*sin(phi1)*sin(theta2) - cos(theta2)*sin(phi2)*sin(theta1))))/(k0^2 + tau0^2)^(1/2) + (k0*sin(sj*(k0^2 + tau0^2)^(1/2))*sin(theta1))/(k0^2 + tau0^2)^(1/2) + sin(phi1 - phi2)*cos(sj*(k0^2 + tau0^2)^(1/2))*cos(theta1)*cos(theta2)))/(k1^2 + tau1^2)^2 - (k1^2*sin((s - sj)*(k1^2 + tau1^2)^(1/2))*(s - sj)*((tau0*sin(sj*(k0^2 + tau0^2)^(1/2))*(cos(phi1)*cos(theta1)*(cos(phi1)*cos(theta1)*sin(theta2) - cos(phi2)*cos(theta2)*sin(theta1)) + cos(theta1)*sin(phi1)*(cos(theta1)*sin(phi1)*sin(theta2) - cos(theta2)*sin(phi2)*sin(theta1))))/(k0^2 + tau0^2)^(1/2) + (k0*sin(sj*(k0^2 + tau0^2)^(1/2))*sin(theta1))/(k0^2 + tau0^2)^(1/2) + sin(phi1 - phi2)*cos(sj*(k0^2 + tau0^2)^(1/2))*cos(theta1)*cos(theta2)))/(k1^2 + tau1^2)^(3/2);
    Df.g1k1 = DG1_k1;
    Df.g2k1 = DG2_k1;
    Df.g3k1 = DG3_k1;
    
    % -- derivative of SECOND helix w.r.t torsion tau1 --
    DG1_tau1 = ((tau0*sin(sj*(k0^2 + tau0^2)^(1/2))*(cos(theta1)*sin(phi1)*sin(theta2) - cos(theta2)*sin(phi2)*sin(theta1)))/(k0^2 + tau0^2)^(1/2) - (k0^2/(k0^2 + tau0^2) + (tau0^2*cos(sj*(k0^2 + tau0^2)^(1/2)))/(k0^2 + tau0^2))*(sin(theta1)*(cos(phi1)*cos(theta1)*sin(theta2) - cos(phi2)*cos(theta2)*sin(theta1)) + cos(theta1)*sin(phi1)*(cos(phi1)*cos(theta1)*cos(theta2)*sin(phi2) - cos(phi2)*cos(theta1)*cos(theta2)*sin(phi1))) + (k0*tau0*cos(phi1)*cos(theta1)*(cos(sj*(k0^2 + tau0^2)^(1/2)) - 1))/(k0^2 + tau0^2))*((k1*sin((s - sj)*(k1^2 + tau1^2)^(1/2)))/(k1^2 + tau1^2)^(3/2) - (k1*(s - sj))/(k1^2 + tau1^2) + (2*k1*tau1^2*(s - sj))/(k1^2 + tau1^2)^2 - (3*k1*tau1^2*sin((s - sj)*(k1^2 + tau1^2)^(1/2)))/(k1^2 + tau1^2)^(5/2) + (k1*tau1^2*cos((s - sj)*(k1^2 + tau1^2)^(1/2))*(s - sj))/(k1^2 + tau1^2)^2) - (cos(phi1)*cos(theta1)*(tau0^2/(k0^2 + tau0^2) + (k0^2*cos(sj*(k0^2 + tau0^2)^(1/2)))/(k0^2 + tau0^2)) + (k0*sin(sj*(k0^2 + tau0^2)^(1/2))*(cos(theta1)*sin(phi1)*sin(theta2) - cos(theta2)*sin(phi2)*sin(theta1)))/(k0^2 + tau0^2)^(1/2) - (k0*tau0*(cos(sj*(k0^2 + tau0^2)^(1/2)) - 1)*(sin(theta1)*(cos(phi1)*cos(theta1)*sin(theta2) - cos(phi2)*cos(theta2)*sin(theta1)) + cos(theta1)*sin(phi1)*(cos(phi1)*cos(theta1)*cos(theta2)*sin(phi2) - cos(phi2)*cos(theta1)*cos(theta2)*sin(phi1))))/(k0^2 + tau0^2))*((2*tau1^3*(s - sj))/(k1^2 + tau1^2)^2 - (2*tau1*(s - sj))/(k1^2 + tau1^2) + (3*k1^2*tau1*sin((s - sj)*(k1^2 + tau1^2)^(1/2)))/(k1^2 + tau1^2)^(5/2) - (k1^2*tau1*cos((s - sj)*(k1^2 + tau1^2)^(1/2))*(s - sj))/(k1^2 + tau1^2)^2) + (2*k1*tau1*(cos((s - sj)*(k1^2 + tau1^2)^(1/2)) - 1)*(cos(sj*(k0^2 + tau0^2)^(1/2))*(cos(theta1)*sin(phi1)*sin(theta2) - cos(theta2)*sin(phi2)*sin(theta1)) + (tau0*sin(sj*(k0^2 + tau0^2)^(1/2))*(sin(theta1)*(cos(phi1)*cos(theta1)*sin(theta2) - cos(phi2)*cos(theta2)*sin(theta1)) + cos(theta1)*sin(phi1)*(cos(phi1)*cos(theta1)*cos(theta2)*sin(phi2) - cos(phi2)*cos(theta1)*cos(theta2)*sin(phi1))))/(k0^2 + tau0^2)^(1/2) - (k0*sin(sj*(k0^2 + tau0^2)^(1/2))*cos(phi1)*cos(theta1))/(k0^2 + tau0^2)^(1/2)))/(k1^2 + tau1^2)^2 + (k1*tau1*sin((s - sj)*(k1^2 + tau1^2)^(1/2))*(s - sj)*(cos(sj*(k0^2 + tau0^2)^(1/2))*(cos(theta1)*sin(phi1)*sin(theta2) - cos(theta2)*sin(phi2)*sin(theta1)) + (tau0*sin(sj*(k0^2 + tau0^2)^(1/2))*(sin(theta1)*(cos(phi1)*cos(theta1)*sin(theta2) - cos(phi2)*cos(theta2)*sin(theta1)) + cos(theta1)*sin(phi1)*(cos(phi1)*cos(theta1)*cos(theta2)*sin(phi2) - cos(phi2)*cos(theta1)*cos(theta2)*sin(phi1))))/(k0^2 + tau0^2)^(1/2) - (k0*sin(sj*(k0^2 + tau0^2)^(1/2))*cos(phi1)*cos(theta1))/(k0^2 + tau0^2)^(1/2)))/(k1^2 + tau1^2)^(3/2);
    DG2_tau1 = ((k0*sin(sj*(k0^2 + tau0^2)^(1/2))*(cos(phi1)*cos(theta1)*sin(theta2) - cos(phi2)*cos(theta2)*sin(theta1)))/(k0^2 + tau0^2)^(1/2) - cos(theta1)*sin(phi1)*(tau0^2/(k0^2 + tau0^2) + (k0^2*cos(sj*(k0^2 + tau0^2)^(1/2)))/(k0^2 + tau0^2)) + (k0*tau0*(sin(theta1)*(cos(theta1)*sin(phi1)*sin(theta2) - cos(theta2)*sin(phi2)*sin(theta1)) - cos(phi1)*cos(theta1)*(cos(phi1)*cos(theta1)*cos(theta2)*sin(phi2) - cos(phi2)*cos(theta1)*cos(theta2)*sin(phi1)))*(cos(sj*(k0^2 + tau0^2)^(1/2)) - 1))/(k0^2 + tau0^2))*((2*tau1^3*(s - sj))/(k1^2 + tau1^2)^2 - (2*tau1*(s - sj))/(k1^2 + tau1^2) + (3*k1^2*tau1*sin((s - sj)*(k1^2 + tau1^2)^(1/2)))/(k1^2 + tau1^2)^(5/2) - (k1^2*tau1*cos((s - sj)*(k1^2 + tau1^2)^(1/2))*(s - sj))/(k1^2 + tau1^2)^2) - ((sin(theta1)*(cos(theta1)*sin(phi1)*sin(theta2) - cos(theta2)*sin(phi2)*sin(theta1)) - cos(phi1)*cos(theta1)*(cos(phi1)*cos(theta1)*cos(theta2)*sin(phi2) - cos(phi2)*cos(theta1)*cos(theta2)*sin(phi1)))*(k0^2/(k0^2 + tau0^2) + (tau0^2*cos(sj*(k0^2 + tau0^2)^(1/2)))/(k0^2 + tau0^2)) + (tau0*sin(sj*(k0^2 + tau0^2)^(1/2))*(cos(phi1)*cos(theta1)*sin(theta2) - cos(phi2)*cos(theta2)*sin(theta1)))/(k0^2 + tau0^2)^(1/2) - (k0*tau0*cos(theta1)*sin(phi1)*(cos(sj*(k0^2 + tau0^2)^(1/2)) - 1))/(k0^2 + tau0^2))*((k1*sin((s - sj)*(k1^2 + tau1^2)^(1/2)))/(k1^2 + tau1^2)^(3/2) - (k1*(s - sj))/(k1^2 + tau1^2) + (2*k1*tau1^2*(s - sj))/(k1^2 + tau1^2)^2 - (3*k1*tau1^2*sin((s - sj)*(k1^2 + tau1^2)^(1/2)))/(k1^2 + tau1^2)^(5/2) + (k1*tau1^2*cos((s - sj)*(k1^2 + tau1^2)^(1/2))*(s - sj))/(k1^2 + tau1^2)^2) - (2*k1*tau1*(cos((s - sj)*(k1^2 + tau1^2)^(1/2)) - 1)*(cos(sj*(k0^2 + tau0^2)^(1/2))*(cos(phi1)*cos(theta1)*sin(theta2) - cos(phi2)*cos(theta2)*sin(theta1)) - (tau0*sin(sj*(k0^2 + tau0^2)^(1/2))*(sin(theta1)*(cos(theta1)*sin(phi1)*sin(theta2) - cos(theta2)*sin(phi2)*sin(theta1)) - cos(phi1)*cos(theta1)*(cos(phi1)*cos(theta1)*cos(theta2)*sin(phi2) - cos(phi2)*cos(theta1)*cos(theta2)*sin(phi1))))/(k0^2 + tau0^2)^(1/2) + (k0*sin(sj*(k0^2 + tau0^2)^(1/2))*cos(theta1)*sin(phi1))/(k0^2 + tau0^2)^(1/2)))/(k1^2 + tau1^2)^2 - (k1*tau1*sin((s - sj)*(k1^2 + tau1^2)^(1/2))*(s - sj)*(cos(sj*(k0^2 + tau0^2)^(1/2))*(cos(phi1)*cos(theta1)*sin(theta2) - cos(phi2)*cos(theta2)*sin(theta1)) - (tau0*sin(sj*(k0^2 + tau0^2)^(1/2))*(sin(theta1)*(cos(theta1)*sin(phi1)*sin(theta2) - cos(theta2)*sin(phi2)*sin(theta1)) - cos(phi1)*cos(theta1)*(cos(phi1)*cos(theta1)*cos(theta2)*sin(phi2) - cos(phi2)*cos(theta1)*cos(theta2)*sin(phi1))))/(k0^2 + tau0^2)^(1/2) + (k0*sin(sj*(k0^2 + tau0^2)^(1/2))*cos(theta1)*sin(phi1))/(k0^2 + tau0^2)^(1/2)))/(k1^2 + tau1^2)^(3/2);
    DG3_tau1 = (((cos(phi1)*cos(theta1)*(cos(phi1)*cos(theta1)*sin(theta2) - cos(phi2)*cos(theta2)*sin(theta1)) + cos(theta1)*sin(phi1)*(cos(theta1)*sin(phi1)*sin(theta2) - cos(theta2)*sin(phi2)*sin(theta1)))*(tau0^2*cos(sj*(k0^2 + tau0^2)^(1/2)) + k0^2))/(k0^2 + tau0^2) + (k0*tau0*sin(theta1)*(cos(sj*(k0^2 + tau0^2)^(1/2)) - 1))/(k0^2 + tau0^2) - (tau0*sin(phi1 - phi2)*sin(sj*(k0^2 + tau0^2)^(1/2))*cos(theta1)*cos(theta2))/(k0^2 + tau0^2)^(1/2))*((k1*sin((s - sj)*(k1^2 + tau1^2)^(1/2)))/(k1^2 + tau1^2)^(3/2) - (k1*(s - sj))/(k1^2 + tau1^2) + (2*k1*tau1^2*(s - sj))/(k1^2 + tau1^2)^2 - (3*k1*tau1^2*sin((s - sj)*(k1^2 + tau1^2)^(1/2)))/(k1^2 + tau1^2)^(5/2) + (k1*tau1^2*cos((s - sj)*(k1^2 + tau1^2)^(1/2))*(s - sj))/(k1^2 + tau1^2)^2) - ((sin(theta1)*(k0^2*cos(sj*(k0^2 + tau0^2)^(1/2)) + tau0^2))/(k0^2 + tau0^2) + (k0*tau0*(cos(phi1)*cos(theta1)*(cos(phi1)*cos(theta1)*sin(theta2) - cos(phi2)*cos(theta2)*sin(theta1)) + cos(theta1)*sin(phi1)*(cos(theta1)*sin(phi1)*sin(theta2) - cos(theta2)*sin(phi2)*sin(theta1)))*(cos(sj*(k0^2 + tau0^2)^(1/2)) - 1))/(k0^2 + tau0^2) - (k0*sin(phi1 - phi2)*sin(sj*(k0^2 + tau0^2)^(1/2))*cos(theta1)*cos(theta2))/(k0^2 + tau0^2)^(1/2))*((2*tau1^3*(s - sj))/(k1^2 + tau1^2)^2 - (2*tau1*(s - sj))/(k1^2 + tau1^2) + (3*k1^2*tau1*sin((s - sj)*(k1^2 + tau1^2)^(1/2)))/(k1^2 + tau1^2)^(5/2) - (k1^2*tau1*cos((s - sj)*(k1^2 + tau1^2)^(1/2))*(s - sj))/(k1^2 + tau1^2)^2) - (2*k1*tau1*(cos((s - sj)*(k1^2 + tau1^2)^(1/2)) - 1)*((tau0*sin(sj*(k0^2 + tau0^2)^(1/2))*(cos(phi1)*cos(theta1)*(cos(phi1)*cos(theta1)*sin(theta2) - cos(phi2)*cos(theta2)*sin(theta1)) + cos(theta1)*sin(phi1)*(cos(theta1)*sin(phi1)*sin(theta2) - cos(theta2)*sin(phi2)*sin(theta1))))/(k0^2 + tau0^2)^(1/2) + (k0*sin(sj*(k0^2 + tau0^2)^(1/2))*sin(theta1))/(k0^2 + tau0^2)^(1/2) + sin(phi1 - phi2)*cos(sj*(k0^2 + tau0^2)^(1/2))*cos(theta1)*cos(theta2)))/(k1^2 + tau1^2)^2 - (k1*tau1*sin((s - sj)*(k1^2 + tau1^2)^(1/2))*(s - sj)*((tau0*sin(sj*(k0^2 + tau0^2)^(1/2))*(cos(phi1)*cos(theta1)*(cos(phi1)*cos(theta1)*sin(theta2) - cos(phi2)*cos(theta2)*sin(theta1)) + cos(theta1)*sin(phi1)*(cos(theta1)*sin(phi1)*sin(theta2) - cos(theta2)*sin(phi2)*sin(theta1))))/(k0^2 + tau0^2)^(1/2) + (k0*sin(sj*(k0^2 + tau0^2)^(1/2))*sin(theta1))/(k0^2 + tau0^2)^(1/2) + sin(phi1 - phi2)*cos(sj*(k0^2 + tau0^2)^(1/2))*cos(theta1)*cos(theta2)))/(k1^2 + tau1^2)^(3/2);
    Df.g1t1 = DG1_tau1;
    Df.g2t1 = DG2_tau1;
    Df.g3t1 = DG3_tau1;
    
    % -- derivative of SECOND helix w.r.t torsion theta1 --
    DG1_theta1 = ((k1*tau1*(s - sj))/(k1^2 + tau1^2) - (k1*tau1*sin((s - sj)*(k1^2 + tau1^2)^(1/2)))/(k1^2 + tau1^2)^(3/2))*((tau0*sin(sj*(k0^2 + tau0^2)^(1/2))*(sin(phi1)*sin(theta1)*sin(theta2) + cos(theta1)*cos(theta2)*sin(phi2)))/(k0^2 + tau0^2)^(1/2) - (cos(phi1)*(tau0^2*cos(sj*(k0^2 + tau0^2)^(1/2)) + k0^2)*(sin(theta2) - 2*cos(theta1)^2*sin(theta2) + 2*cos(phi1)*cos(phi2)*cos(theta1)*cos(theta2)*sin(theta1) + 2*cos(theta1)*cos(theta2)*sin(phi1)*sin(phi2)*sin(theta1)))/(k0^2 + tau0^2) + (k0*tau0*cos(phi1)*sin(theta1)*(cos(sj*(k0^2 + tau0^2)^(1/2)) - 1))/(k0^2 + tau0^2)) - ((tau1^2*(s - sj))/(k1^2 + tau1^2) + (k1^2*sin((s - sj)*(k1^2 + tau1^2)^(1/2)))/(k1^2 + tau1^2)^(3/2))*((k0*sin(sj*(k0^2 + tau0^2)^(1/2))*(sin(phi1)*sin(theta1)*sin(theta2) + cos(theta1)*cos(theta2)*sin(phi2)))/(k0^2 + tau0^2)^(1/2) + (cos(phi1)*sin(theta1)*(k0^2*cos(sj*(k0^2 + tau0^2)^(1/2)) + tau0^2))/(k0^2 + tau0^2) - (k0*tau0*cos(phi1)*(cos(sj*(k0^2 + tau0^2)^(1/2)) - 1)*(sin(theta2) - 2*cos(theta1)^2*sin(theta2) + 2*cos(phi1)*cos(phi2)*cos(theta1)*cos(theta2)*sin(theta1) + 2*cos(theta1)*cos(theta2)*sin(phi1)*sin(phi2)*sin(theta1)))/(k0^2 + tau0^2)) + (k1*(cos((s - sj)*(k1^2 + tau1^2)^(1/2)) - 1)*(cos(sj*(k0^2 + tau0^2)^(1/2))*(sin(phi1)*sin(theta1)*sin(theta2) + cos(theta1)*cos(theta2)*sin(phi2)) - (k0*sin(sj*(k0^2 + tau0^2)^(1/2))*cos(phi1)*sin(theta1))/(k0^2 + tau0^2)^(1/2) + (tau0*sin(sj*(k0^2 + tau0^2)^(1/2))*cos(phi1)*(sin(theta2) - 2*cos(theta1)^2*sin(theta2) + 2*cos(phi1)*cos(phi2)*cos(theta1)*cos(theta2)*sin(theta1) + 2*cos(theta1)*cos(theta2)*sin(phi1)*sin(phi2)*sin(theta1)))/(k0^2 + tau0^2)^(1/2)))/(k1^2 + tau1^2);
    DG2_theta1 = ((tau1^2*(s - sj))/(k1^2 + tau1^2) + (k1^2*sin((s - sj)*(k1^2 + tau1^2)^(1/2)))/(k1^2 + tau1^2)^(3/2))*((k0*sin(sj*(k0^2 + tau0^2)^(1/2))*(cos(phi1)*sin(theta1)*sin(theta2) + cos(phi2)*cos(theta1)*cos(theta2)))/(k0^2 + tau0^2)^(1/2) - (sin(phi1)*sin(theta1)*(k0^2*cos(sj*(k0^2 + tau0^2)^(1/2)) + tau0^2))/(k0^2 + tau0^2) + (k0*tau0*(cos(sj*(k0^2 + tau0^2)^(1/2)) - 1)*(sin(phi1)*sin(theta2) - 2*cos(theta1)^2*sin(phi1)*sin(theta2) + 2*cos(theta1)*cos(theta2)*sin(phi2)*sin(theta1) - 2*cos(phi1)^2*cos(theta1)*cos(theta2)*sin(phi2)*sin(theta1) + 2*cos(phi1)*cos(phi2)*cos(theta1)*cos(theta2)*sin(phi1)*sin(theta1)))/(k0^2 + tau0^2)) - ((k1*tau1*(s - sj))/(k1^2 + tau1^2) - (k1*tau1*sin((s - sj)*(k1^2 + tau1^2)^(1/2)))/(k1^2 + tau1^2)^(3/2))*(((tau0^2*cos(sj*(k0^2 + tau0^2)^(1/2)) + k0^2)*(sin(phi1)*sin(theta2) - 2*cos(theta1)^2*sin(phi1)*sin(theta2) + 2*cos(theta1)*cos(theta2)*sin(phi2)*sin(theta1) - 2*cos(phi1)^2*cos(theta1)*cos(theta2)*sin(phi2)*sin(theta1) + 2*cos(phi1)*cos(phi2)*cos(theta1)*cos(theta2)*sin(phi1)*sin(theta1)))/(k0^2 + tau0^2) + (tau0*sin(sj*(k0^2 + tau0^2)^(1/2))*(cos(phi1)*sin(theta1)*sin(theta2) + cos(phi2)*cos(theta1)*cos(theta2)))/(k0^2 + tau0^2)^(1/2) - (k0*tau0*sin(phi1)*sin(theta1)*(cos(sj*(k0^2 + tau0^2)^(1/2)) - 1))/(k0^2 + tau0^2)) - (k1*(cos((s - sj)*(k1^2 + tau1^2)^(1/2)) - 1)*(cos(sj*(k0^2 + tau0^2)^(1/2))*(cos(phi1)*sin(theta1)*sin(theta2) + cos(phi2)*cos(theta1)*cos(theta2)) - (tau0*sin(sj*(k0^2 + tau0^2)^(1/2))*(sin(phi1)*sin(theta2) - 2*cos(theta1)^2*sin(phi1)*sin(theta2) + 2*cos(theta1)*cos(theta2)*sin(phi2)*sin(theta1) - 2*cos(phi1)^2*cos(theta1)*cos(theta2)*sin(phi2)*sin(theta1) + 2*cos(phi1)*cos(phi2)*cos(theta1)*cos(theta2)*sin(phi1)*sin(theta1)))/(k0^2 + tau0^2)^(1/2) + (k0*sin(sj*(k0^2 + tau0^2)^(1/2))*sin(phi1)*sin(theta1))/(k0^2 + tau0^2)^(1/2)))/(k1^2 + tau1^2);
    DG3_theta1 = ((tau1^2*(s - sj))/(k1^2 + tau1^2) + (k1^2*sin((s - sj)*(k1^2 + tau1^2)^(1/2)))/(k1^2 + tau1^2)^(3/2))*((cos(theta1)*(k0^2*cos(sj*(k0^2 + tau0^2)^(1/2)) + tau0^2))/(k0^2 + tau0^2) - (k0*tau0*(cos(sj*(k0^2 + tau0^2)^(1/2)) - 1)*(2*cos(theta1)*sin(theta1)*sin(theta2) - cos(phi1)*cos(phi2)*cos(theta2) - cos(theta2)*sin(phi1)*sin(phi2) + 2*cos(phi1)*cos(phi2)*cos(theta1)^2*cos(theta2) + 2*cos(theta1)^2*cos(theta2)*sin(phi1)*sin(phi2)))/(k0^2 + tau0^2) + (k0*sin(phi1 - phi2)*sin(sj*(k0^2 + tau0^2)^(1/2))*cos(theta2)*sin(theta1))/(k0^2 + tau0^2)^(1/2)) - ((k1*tau1*(s - sj))/(k1^2 + tau1^2) - (k1*tau1*sin((s - sj)*(k1^2 + tau1^2)^(1/2)))/(k1^2 + tau1^2)^(3/2))*((k0*tau0*cos(theta1)*(cos(sj*(k0^2 + tau0^2)^(1/2)) - 1))/(k0^2 + tau0^2) - ((tau0^2*cos(sj*(k0^2 + tau0^2)^(1/2)) + k0^2)*(2*cos(theta1)*sin(theta1)*sin(theta2) - cos(phi1)*cos(phi2)*cos(theta2) - cos(theta2)*sin(phi1)*sin(phi2) + 2*cos(phi1)*cos(phi2)*cos(theta1)^2*cos(theta2) + 2*cos(theta1)^2*cos(theta2)*sin(phi1)*sin(phi2)))/(k0^2 + tau0^2) + (tau0*sin(phi1 - phi2)*sin(sj*(k0^2 + tau0^2)^(1/2))*cos(theta2)*sin(theta1))/(k0^2 + tau0^2)^(1/2)) - (k1*(cos((s - sj)*(k1^2 + tau1^2)^(1/2)) - 1)*((tau0*sin(sj*(k0^2 + tau0^2)^(1/2))*(2*cos(theta1)*sin(theta1)*sin(theta2) - cos(phi1)*cos(phi2)*cos(theta2) - cos(theta2)*sin(phi1)*sin(phi2) + 2*cos(phi1)*cos(phi2)*cos(theta1)^2*cos(theta2) + 2*cos(theta1)^2*cos(theta2)*sin(phi1)*sin(phi2)))/(k0^2 + tau0^2)^(1/2) - (k0*sin(sj*(k0^2 + tau0^2)^(1/2))*cos(theta1))/(k0^2 + tau0^2)^(1/2) + sin(phi1 - phi2)*cos(sj*(k0^2 + tau0^2)^(1/2))*cos(theta2)*sin(theta1)))/(k1^2 + tau1^2);
    Df.g1theta1 = DG1_theta1;
    Df.g2theta1 = DG2_theta1;
    Df.g3theta1 = DG3_theta1;
    
    % -- derivative of SECOND helix w.r.t torsion theta2 --
    DG1_theta2 = ((k0*sin(sj*(k0^2 + tau0^2)^(1/2))*(sin(phi2)*sin(theta1)*sin(theta2) + cos(theta1)*cos(theta2)*sin(phi1)))/(k0^2 + tau0^2)^(1/2) - (k0*tau0*(sin(theta1)*(cos(phi2)*sin(theta1)*sin(theta2) + cos(phi1)*cos(theta1)*cos(theta2)) - cos(theta1)*sin(phi1)*(cos(phi1)*cos(theta1)*sin(phi2)*sin(theta2) - cos(phi2)*cos(theta1)*sin(phi1)*sin(theta2)))*(cos(sj*(k0^2 + tau0^2)^(1/2)) - 1))/(k0^2 + tau0^2))*((tau1^2*(s - sj))/(k1^2 + tau1^2) + (k1^2*sin((s - sj)*(k1^2 + tau1^2)^(1/2)))/(k1^2 + tau1^2)^(3/2)) + ((k1*tau1*(s - sj))/(k1^2 + tau1^2) - (k1*tau1*sin((s - sj)*(k1^2 + tau1^2)^(1/2)))/(k1^2 + tau1^2)^(3/2))*((k0^2/(k0^2 + tau0^2) + (tau0^2*cos(sj*(k0^2 + tau0^2)^(1/2)))/(k0^2 + tau0^2))*(sin(theta1)*(cos(phi2)*sin(theta1)*sin(theta2) + cos(phi1)*cos(theta1)*cos(theta2)) - cos(theta1)*sin(phi1)*(cos(phi1)*cos(theta1)*sin(phi2)*sin(theta2) - cos(phi2)*cos(theta1)*sin(phi1)*sin(theta2))) - (tau0*sin(sj*(k0^2 + tau0^2)^(1/2))*(sin(phi2)*sin(theta1)*sin(theta2) + cos(theta1)*cos(theta2)*sin(phi1)))/(k0^2 + tau0^2)^(1/2)) - (k1*(cos((s - sj)*(k1^2 + tau1^2)^(1/2)) - 1)*(cos(sj*(k0^2 + tau0^2)^(1/2))*(sin(phi2)*sin(theta1)*sin(theta2) + cos(theta1)*cos(theta2)*sin(phi1)) + (tau0*sin(sj*(k0^2 + tau0^2)^(1/2))*(sin(theta1)*(cos(phi2)*sin(theta1)*sin(theta2) + cos(phi1)*cos(theta1)*cos(theta2)) - cos(theta1)*sin(phi1)*(cos(phi1)*cos(theta1)*sin(phi2)*sin(theta2) - cos(phi2)*cos(theta1)*sin(phi1)*sin(theta2))))/(k0^2 + tau0^2)^(1/2)))/(k1^2 + tau1^2);
    DG2_theta2 = ((k0^2/(k0^2 + tau0^2) + (tau0^2*cos(sj*(k0^2 + tau0^2)^(1/2)))/(k0^2 + tau0^2))*(sin(theta1)*(sin(phi2)*sin(theta1)*sin(theta2) + cos(theta1)*cos(theta2)*sin(phi1)) + cos(phi1)*cos(theta1)*(cos(phi1)*cos(theta1)*sin(phi2)*sin(theta2) - cos(phi2)*cos(theta1)*sin(phi1)*sin(theta2))) + (tau0*sin(sj*(k0^2 + tau0^2)^(1/2))*(cos(phi2)*sin(theta1)*sin(theta2) + cos(phi1)*cos(theta1)*cos(theta2)))/(k0^2 + tau0^2)^(1/2))*((k1*tau1*(s - sj))/(k1^2 + tau1^2) - (k1*tau1*sin((s - sj)*(k1^2 + tau1^2)^(1/2)))/(k1^2 + tau1^2)^(3/2)) - ((k0*sin(sj*(k0^2 + tau0^2)^(1/2))*(cos(phi2)*sin(theta1)*sin(theta2) + cos(phi1)*cos(theta1)*cos(theta2)))/(k0^2 + tau0^2)^(1/2) + (k0*tau0*(sin(theta1)*(sin(phi2)*sin(theta1)*sin(theta2) + cos(theta1)*cos(theta2)*sin(phi1)) + cos(phi1)*cos(theta1)*(cos(phi1)*cos(theta1)*sin(phi2)*sin(theta2) - cos(phi2)*cos(theta1)*sin(phi1)*sin(theta2)))*(cos(sj*(k0^2 + tau0^2)^(1/2)) - 1))/(k0^2 + tau0^2))*((tau1^2*(s - sj))/(k1^2 + tau1^2) + (k1^2*sin((s - sj)*(k1^2 + tau1^2)^(1/2)))/(k1^2 + tau1^2)^(3/2)) + (k1*(cos((s - sj)*(k1^2 + tau1^2)^(1/2)) - 1)*(cos(sj*(k0^2 + tau0^2)^(1/2))*(cos(phi2)*sin(theta1)*sin(theta2) + cos(phi1)*cos(theta1)*cos(theta2)) - (tau0*sin(sj*(k0^2 + tau0^2)^(1/2))*(sin(theta1)*(sin(phi2)*sin(theta1)*sin(theta2) + cos(theta1)*cos(theta2)*sin(phi1)) + cos(phi1)*cos(theta1)*(cos(phi1)*cos(theta1)*sin(phi2)*sin(theta2) - cos(phi2)*cos(theta1)*sin(phi1)*sin(theta2))))/(k0^2 + tau0^2)^(1/2)))/(k1^2 + tau1^2);
    DG3_theta2 = ((k0*tau0*(cos(phi1)*cos(theta1)*(cos(phi2)*sin(theta1)*sin(theta2) + cos(phi1)*cos(theta1)*cos(theta2)) + cos(theta1)*sin(phi1)*(sin(phi2)*sin(theta1)*sin(theta2) + cos(theta1)*cos(theta2)*sin(phi1)))*(cos(sj*(k0^2 + tau0^2)^(1/2)) - 1))/(k0^2 + tau0^2) + (k0*sin(phi1 - phi2)*sin(sj*(k0^2 + tau0^2)^(1/2))*cos(theta1)*sin(theta2))/(k0^2 + tau0^2)^(1/2))*((tau1^2*(s - sj))/(k1^2 + tau1^2) + (k1^2*sin((s - sj)*(k1^2 + tau1^2)^(1/2)))/(k1^2 + tau1^2)^(3/2)) - ((k1*tau1*(s - sj))/(k1^2 + tau1^2) - (k1*tau1*sin((s - sj)*(k1^2 + tau1^2)^(1/2)))/(k1^2 + tau1^2)^(3/2))*(((cos(phi1)*cos(theta1)*(cos(phi2)*sin(theta1)*sin(theta2) + cos(phi1)*cos(theta1)*cos(theta2)) + cos(theta1)*sin(phi1)*(sin(phi2)*sin(theta1)*sin(theta2) + cos(theta1)*cos(theta2)*sin(phi1)))*(tau0^2*cos(sj*(k0^2 + tau0^2)^(1/2)) + k0^2))/(k0^2 + tau0^2) + (tau0*sin(phi1 - phi2)*sin(sj*(k0^2 + tau0^2)^(1/2))*cos(theta1)*sin(theta2))/(k0^2 + tau0^2)^(1/2)) + (k1*(cos((s - sj)*(k1^2 + tau1^2)^(1/2)) - 1)*((tau0*sin(sj*(k0^2 + tau0^2)^(1/2))*(cos(phi1)*cos(theta1)*(cos(phi2)*sin(theta1)*sin(theta2) + cos(phi1)*cos(theta1)*cos(theta2)) + cos(theta1)*sin(phi1)*(sin(phi2)*sin(theta1)*sin(theta2) + cos(theta1)*cos(theta2)*sin(phi1))))/(k0^2 + tau0^2)^(1/2) - sin(phi1 - phi2)*cos(sj*(k0^2 + tau0^2)^(1/2))*cos(theta1)*sin(theta2)))/(k1^2 + tau1^2);
    Df.g1theta2 = DG1_theta2;
    Df.g2theta2 = DG2_theta2;
    Df.g3theta2 = DG3_theta2;
    
    % -- derivative of SECOND helix w.r.t torsion phi1 --
    DG1_phi1 = ((tau1^2*(s - sj))/(k1^2 + tau1^2) + (k1^2*sin((s - sj)*(k1^2 + tau1^2)^(1/2)))/(k1^2 + tau1^2)^(3/2))*((k0*sin(sj*(k0^2 + tau0^2)^(1/2))*cos(phi1)*cos(theta1)*sin(theta2))/(k0^2 + tau0^2)^(1/2) - (cos(theta1)*sin(phi1)*(k0^2*cos(sj*(k0^2 + tau0^2)^(1/2)) + tau0^2))/(k0^2 + tau0^2) + (k0*tau0*cos(theta1)*(cos(sj*(k0^2 + tau0^2)^(1/2)) - 1)*(sin(phi1)*sin(theta1)*sin(theta2) + cos(theta1)*cos(theta2)*sin(phi2) - 2*cos(phi1)^2*cos(theta1)*cos(theta2)*sin(phi2) + 2*cos(phi1)*cos(phi2)*cos(theta1)*cos(theta2)*sin(phi1)))/(k0^2 + tau0^2)) - ((k1*tau1*(s - sj))/(k1^2 + tau1^2) - (k1*tau1*sin((s - sj)*(k1^2 + tau1^2)^(1/2)))/(k1^2 + tau1^2)^(3/2))*((cos(theta1)*(tau0^2*cos(sj*(k0^2 + tau0^2)^(1/2)) + k0^2)*(sin(phi1)*sin(theta1)*sin(theta2) + cos(theta1)*cos(theta2)*sin(phi2) - 2*cos(phi1)^2*cos(theta1)*cos(theta2)*sin(phi2) + 2*cos(phi1)*cos(phi2)*cos(theta1)*cos(theta2)*sin(phi1)))/(k0^2 + tau0^2) - (k0*tau0*cos(theta1)*sin(phi1)*(cos(sj*(k0^2 + tau0^2)^(1/2)) - 1))/(k0^2 + tau0^2) + (tau0*sin(sj*(k0^2 + tau0^2)^(1/2))*cos(phi1)*cos(theta1)*sin(theta2))/(k0^2 + tau0^2)^(1/2)) - (k1*(cos((s - sj)*(k1^2 + tau1^2)^(1/2)) - 1)*(cos(sj*(k0^2 + tau0^2)^(1/2))*cos(phi1)*cos(theta1)*sin(theta2) + (k0*sin(sj*(k0^2 + tau0^2)^(1/2))*cos(theta1)*sin(phi1))/(k0^2 + tau0^2)^(1/2) - (tau0*sin(sj*(k0^2 + tau0^2)^(1/2))*cos(theta1)*(sin(phi1)*sin(theta1)*sin(theta2) + cos(theta1)*cos(theta2)*sin(phi2) - 2*cos(phi1)^2*cos(theta1)*cos(theta2)*sin(phi2) + 2*cos(phi1)*cos(phi2)*cos(theta1)*cos(theta2)*sin(phi1)))/(k0^2 + tau0^2)^(1/2)))/(k1^2 + tau1^2);
    DG2_phi1 = ((tau1^2*(s - sj))/(k1^2 + tau1^2) + (k1^2*sin((s - sj)*(k1^2 + tau1^2)^(1/2)))/(k1^2 + tau1^2)^(3/2))*((cos(phi1)*cos(theta1)*(k0^2*cos(sj*(k0^2 + tau0^2)^(1/2)) + tau0^2))/(k0^2 + tau0^2) - (k0*tau0*cos(theta1)*(cos(sj*(k0^2 + tau0^2)^(1/2)) - 1)*(cos(phi1)*sin(theta1)*sin(theta2) - cos(phi2)*cos(theta1)*cos(theta2) + 2*cos(phi1)^2*cos(phi2)*cos(theta1)*cos(theta2) + 2*cos(phi1)*cos(theta1)*cos(theta2)*sin(phi1)*sin(phi2)))/(k0^2 + tau0^2) + (k0*sin(sj*(k0^2 + tau0^2)^(1/2))*cos(theta1)*sin(phi1)*sin(theta2))/(k0^2 + tau0^2)^(1/2)) - ((k1*tau1*(s - sj))/(k1^2 + tau1^2) - (k1*tau1*sin((s - sj)*(k1^2 + tau1^2)^(1/2)))/(k1^2 + tau1^2)^(3/2))*((k0*tau0*cos(phi1)*cos(theta1)*(cos(sj*(k0^2 + tau0^2)^(1/2)) - 1))/(k0^2 + tau0^2) - (cos(theta1)*(tau0^2*cos(sj*(k0^2 + tau0^2)^(1/2)) + k0^2)*(cos(phi1)*sin(theta1)*sin(theta2) - cos(phi2)*cos(theta1)*cos(theta2) + 2*cos(phi1)^2*cos(phi2)*cos(theta1)*cos(theta2) + 2*cos(phi1)*cos(theta1)*cos(theta2)*sin(phi1)*sin(phi2)))/(k0^2 + tau0^2) + (tau0*sin(sj*(k0^2 + tau0^2)^(1/2))*cos(theta1)*sin(phi1)*sin(theta2))/(k0^2 + tau0^2)^(1/2)) - (k1*(cos((s - sj)*(k1^2 + tau1^2)^(1/2)) - 1)*(cos(sj*(k0^2 + tau0^2)^(1/2))*cos(theta1)*sin(phi1)*sin(theta2) - (k0*sin(sj*(k0^2 + tau0^2)^(1/2))*cos(phi1)*cos(theta1))/(k0^2 + tau0^2)^(1/2) + (tau0*sin(sj*(k0^2 + tau0^2)^(1/2))*cos(theta1)*(cos(phi1)*sin(theta1)*sin(theta2) - cos(phi2)*cos(theta1)*cos(theta2) + 2*cos(phi1)^2*cos(phi2)*cos(theta1)*cos(theta2) + 2*cos(phi1)*cos(theta1)*cos(theta2)*sin(phi1)*sin(phi2)))/(k0^2 + tau0^2)^(1/2)))/(k1^2 + tau1^2);
    DG3_phi1 = (k1*cos(theta1)*cos(theta2)*(cos(phi1 - phi2)*cos(sj*(k0^2 + tau0^2)^(1/2))*(k0^2 + tau0^2)^(1/2) + tau0*sin(phi1 - phi2)*sin(sj*(k0^2 + tau0^2)^(1/2))*sin(theta1))*(cos((s - sj)*(k1^2 + tau1^2)^(1/2)) - 1))/((k0^2 + tau0^2)^(1/2)*(k1^2 + tau1^2)) - ((k0*cos(phi1 - phi2)*sin(sj*(k0^2 + tau0^2)^(1/2))*cos(theta1)*cos(theta2))/(k0^2 + tau0^2)^(1/2) - (k0*tau0*sin(phi1 - phi2)*sin(2*theta1)*cos(theta2)*(cos(sj*(k0^2 + tau0^2)^(1/2)) - 1))/(2*(k0^2 + tau0^2)))*((tau1^2*(s - sj))/(k1^2 + tau1^2) + (k1^2*sin((s - sj)*(k1^2 + tau1^2)^(1/2)))/(k1^2 + tau1^2)^(3/2)) - ((k1*tau1*(s - sj))/(k1^2 + tau1^2) - (k1*tau1*sin((s - sj)*(k1^2 + tau1^2)^(1/2)))/(k1^2 + tau1^2)^(3/2))*((sin(phi1 - phi2)*sin(2*theta1)*cos(theta2)*(tau0^2*cos(sj*(k0^2 + tau0^2)^(1/2)) + k0^2))/(2*(k0^2 + tau0^2)) - (tau0*cos(phi1 - phi2)*sin(sj*(k0^2 + tau0^2)^(1/2))*cos(theta1)*cos(theta2))/(k0^2 + tau0^2)^(1/2));
    Df.g1phi1 = DG1_phi1;
    Df.g2phi1 = DG2_phi1;
    Df.g3phi1 = DG3_phi1;
    
    % -- derivative of SECOND helix w.r.t torsion phi2 --
    DG1_phi2 = ((k1*tau1*(s - sj))/(k1^2 + tau1^2) - (k1*tau1*sin((s - sj)*(k1^2 + tau1^2)^(1/2)))/(k1^2 + tau1^2)^(3/2))*((cos(theta2)*(tau0^2*cos(sj*(k0^2 + tau0^2)^(1/2)) + k0^2)*(- sin(phi2)*cos(phi1)^2*cos(theta1)^2 + cos(phi2)*sin(phi1)*cos(phi1)*cos(theta1)^2 + sin(phi2)))/(k0^2 + tau0^2) + (tau0*sin(sj*(k0^2 + tau0^2)^(1/2))*cos(phi2)*cos(theta2)*sin(theta1))/(k0^2 + tau0^2)^(1/2)) - ((k0*sin(sj*(k0^2 + tau0^2)^(1/2))*cos(phi2)*cos(theta2)*sin(theta1))/(k0^2 + tau0^2)^(1/2) + (k0*tau0*cos(theta2)*(cos(sj*(k0^2 + tau0^2)^(1/2)) - 1)*(- sin(phi2)*cos(phi1)^2*cos(theta1)^2 + cos(phi2)*sin(phi1)*cos(phi1)*cos(theta1)^2 + sin(phi2)))/(k0^2 + tau0^2))*((tau1^2*(s - sj))/(k1^2 + tau1^2) + (k1^2*sin((s - sj)*(k1^2 + tau1^2)^(1/2)))/(k1^2 + tau1^2)^(3/2)) + (k1*(cos((s - sj)*(k1^2 + tau1^2)^(1/2)) - 1)*(cos(sj*(k0^2 + tau0^2)^(1/2))*cos(phi2)*cos(theta2)*sin(theta1) - (tau0*sin(sj*(k0^2 + tau0^2)^(1/2))*cos(theta2)*(- sin(phi2)*cos(phi1)^2*cos(theta1)^2 + cos(phi2)*sin(phi1)*cos(phi1)*cos(theta1)^2 + sin(phi2)))/(k0^2 + tau0^2)^(1/2)))/(k1^2 + tau1^2);
    DG2_phi2 = ((k0*tau0*cos(theta2)*(cos(sj*(k0^2 + tau0^2)^(1/2)) - 1)*(cos(phi2)*cos(phi1)^2*cos(theta1)^2 + sin(phi1)*sin(phi2)*cos(phi1)*cos(theta1)^2 + cos(phi2)*sin(theta1)^2))/(k0^2 + tau0^2) - (k0*sin(sj*(k0^2 + tau0^2)^(1/2))*cos(theta2)*sin(phi2)*sin(theta1))/(k0^2 + tau0^2)^(1/2))*((tau1^2*(s - sj))/(k1^2 + tau1^2) + (k1^2*sin((s - sj)*(k1^2 + tau1^2)^(1/2)))/(k1^2 + tau1^2)^(3/2)) - ((cos(theta2)*(tau0^2*cos(sj*(k0^2 + tau0^2)^(1/2)) + k0^2)*(cos(phi2)*cos(phi1)^2*cos(theta1)^2 + sin(phi1)*sin(phi2)*cos(phi1)*cos(theta1)^2 + cos(phi2)*sin(theta1)^2))/(k0^2 + tau0^2) - (tau0*sin(sj*(k0^2 + tau0^2)^(1/2))*cos(theta2)*sin(phi2)*sin(theta1))/(k0^2 + tau0^2)^(1/2))*((k1*tau1*(s - sj))/(k1^2 + tau1^2) - (k1*tau1*sin((s - sj)*(k1^2 + tau1^2)^(1/2)))/(k1^2 + tau1^2)^(3/2)) + (k1*(cos((s - sj)*(k1^2 + tau1^2)^(1/2)) - 1)*(cos(sj*(k0^2 + tau0^2)^(1/2))*cos(theta2)*sin(phi2)*sin(theta1) + (tau0*sin(sj*(k0^2 + tau0^2)^(1/2))*cos(theta2)*(cos(phi2)*cos(phi1)^2*cos(theta1)^2 + sin(phi1)*sin(phi2)*cos(phi1)*cos(theta1)^2 + cos(phi2)*sin(theta1)^2))/(k0^2 + tau0^2)^(1/2)))/(k1^2 + tau1^2);
    DG3_phi2 = ((k1*tau1*(s - sj))/(k1^2 + tau1^2) - (k1*tau1*sin((s - sj)*(k1^2 + tau1^2)^(1/2)))/(k1^2 + tau1^2)^(3/2))*((sin(phi1 - phi2)*sin(2*theta1)*cos(theta2)*(tau0^2*cos(sj*(k0^2 + tau0^2)^(1/2)) + k0^2))/(2*(k0^2 + tau0^2)) - (tau0*cos(phi1 - phi2)*sin(sj*(k0^2 + tau0^2)^(1/2))*cos(theta1)*cos(theta2))/(k0^2 + tau0^2)^(1/2)) + ((k0*cos(phi1 - phi2)*sin(sj*(k0^2 + tau0^2)^(1/2))*cos(theta1)*cos(theta2))/(k0^2 + tau0^2)^(1/2) - (k0*tau0*sin(phi1 - phi2)*sin(2*theta1)*cos(theta2)*(cos(sj*(k0^2 + tau0^2)^(1/2)) - 1))/(2*(k0^2 + tau0^2)))*((tau1^2*(s - sj))/(k1^2 + tau1^2) + (k1^2*sin((s - sj)*(k1^2 + tau1^2)^(1/2)))/(k1^2 + tau1^2)^(3/2)) - (k1*cos(theta1)*cos(theta2)*(cos(phi1 - phi2)*cos(sj*(k0^2 + tau0^2)^(1/2))*(k0^2 + tau0^2)^(1/2) + tau0*sin(phi1 - phi2)*sin(sj*(k0^2 + tau0^2)^(1/2))*sin(theta1))*(cos((s - sj)*(k1^2 + tau1^2)^(1/2)) - 1))/((k0^2 + tau0^2)^(1/2)*(k1^2 + tau1^2));
    Df.g1phi2 = DG1_phi2;
    Df.g2phi2 = DG2_phi2;
    Df.g3phi2 = DG3_phi2;
end