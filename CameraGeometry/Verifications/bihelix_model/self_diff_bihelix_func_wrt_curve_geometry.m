function Df = self_diff_bihelix_func_wrt_curve_geometry(k0, tau0, k1, tau1, s, sj, T0, N0, B0)
    Tx = T0(1,1);
    Ty = T0(2,1);
    Tz = T0(3,1);
    Nx = N0(1,1);
    Ny = N0(2,1);
    Nz = N0(3,1);
    Bx = B0(1,1);
    By = B0(2,1);
    Bz = B0(3,1);

    % -- derivative of FIRST helix w.r.t curvature k0 --
    DF1_k0 = (2*Nx*k0^2*(cos(s*(k0^2 + tau0^2)^(1/2)) - 1))/(k0^2 + tau0^2)^2 - (Tx*k0*(k0^2*sin(s*(k0^2 + tau0^2)^(1/2)) - 2*tau0^2*sin(s*(k0^2 + tau0^2)^(1/2)) + 2*s*tau0^2*(k0^2 + tau0^2)^(1/2) - k0^2*s*cos(s*(k0^2 + tau0^2)^(1/2))*(k0^2 + tau0^2)^(1/2)))/(k0^2 + tau0^2)^(5/2) - (Bx*tau0*(tau0^2*sin(s*(k0^2 + tau0^2)^(1/2)) - 2*k0^2*sin(s*(k0^2 + tau0^2)^(1/2)) - s*(k0^2 + tau0^2)^(3/2) + 2*k0^2*s*(k0^2 + tau0^2)^(1/2) + k0^2*s*cos(s*(k0^2 + tau0^2)^(1/2))*(k0^2 + tau0^2)^(1/2)))/(k0^2 + tau0^2)^(5/2) - (Nx*(cos(s*(k0^2 + tau0^2)^(1/2)) - 1))/(k0^2 + tau0^2) + (Nx*k0^2*s*sin(s*(k0^2 + tau0^2)^(1/2)))/(k0^2 + tau0^2)^(3/2);
    DF2_k0 = (2*Ny*k0^2*(cos(s*(k0^2 + tau0^2)^(1/2)) - 1))/(k0^2 + tau0^2)^2 - (Ty*k0*(k0^2*sin(s*(k0^2 + tau0^2)^(1/2)) - 2*tau0^2*sin(s*(k0^2 + tau0^2)^(1/2)) + 2*s*tau0^2*(k0^2 + tau0^2)^(1/2) - k0^2*s*cos(s*(k0^2 + tau0^2)^(1/2))*(k0^2 + tau0^2)^(1/2)))/(k0^2 + tau0^2)^(5/2) - (By*tau0*(tau0^2*sin(s*(k0^2 + tau0^2)^(1/2)) - 2*k0^2*sin(s*(k0^2 + tau0^2)^(1/2)) - s*(k0^2 + tau0^2)^(3/2) + 2*k0^2*s*(k0^2 + tau0^2)^(1/2) + k0^2*s*cos(s*(k0^2 + tau0^2)^(1/2))*(k0^2 + tau0^2)^(1/2)))/(k0^2 + tau0^2)^(5/2) - (Ny*(cos(s*(k0^2 + tau0^2)^(1/2)) - 1))/(k0^2 + tau0^2) + (Ny*k0^2*s*sin(s*(k0^2 + tau0^2)^(1/2)))/(k0^2 + tau0^2)^(3/2);
    DF3_k0 = (2*Nz*k0^2*(cos(s*(k0^2 + tau0^2)^(1/2)) - 1))/(k0^2 + tau0^2)^2 - (Tz*k0*(k0^2*sin(s*(k0^2 + tau0^2)^(1/2)) - 2*tau0^2*sin(s*(k0^2 + tau0^2)^(1/2)) + 2*s*tau0^2*(k0^2 + tau0^2)^(1/2) - k0^2*s*cos(s*(k0^2 + tau0^2)^(1/2))*(k0^2 + tau0^2)^(1/2)))/(k0^2 + tau0^2)^(5/2) - (Bz*tau0*(tau0^2*sin(s*(k0^2 + tau0^2)^(1/2)) - 2*k0^2*sin(s*(k0^2 + tau0^2)^(1/2)) - s*(k0^2 + tau0^2)^(3/2) + 2*k0^2*s*(k0^2 + tau0^2)^(1/2) + k0^2*s*cos(s*(k0^2 + tau0^2)^(1/2))*(k0^2 + tau0^2)^(1/2)))/(k0^2 + tau0^2)^(5/2) - (Nz*(cos(s*(k0^2 + tau0^2)^(1/2)) - 1))/(k0^2 + tau0^2) + (Nz*k0^2*s*sin(s*(k0^2 + tau0^2)^(1/2)))/(k0^2 + tau0^2)^(3/2);
    Df.f1k0 = DF1_k0;
    Df.f2k0 = DF2_k0;
    Df.f3k0 = DF3_k0;
    
    % -- derivative of FIRST helix w.r.t torsion tau0 --
    DF1_tau0 = (2*Nx*k0*tau0*(cos(s*(k0^2 + tau0^2)^(1/2)) - 1))/(k0^2 + tau0^2)^2 - Bx*((k0*sin(s*(k0^2 + tau0^2)^(1/2)))/(k0^2 + tau0^2)^(3/2) - (k0*s)/(k0^2 + tau0^2) + (2*k0*s*tau0^2)/(k0^2 + tau0^2)^2 - (3*k0*tau0^2*sin(s*(k0^2 + tau0^2)^(1/2)))/(k0^2 + tau0^2)^(5/2) + (k0*s*tau0^2*cos(s*(k0^2 + tau0^2)^(1/2)))/(k0^2 + tau0^2)^2) - Tx*((2*s*tau0^3)/(k0^2 + tau0^2)^2 - (2*s*tau0)/(k0^2 + tau0^2) + (3*k0^2*tau0*sin(s*(k0^2 + tau0^2)^(1/2)))/(k0^2 + tau0^2)^(5/2) - (k0^2*s*tau0*cos(s*(k0^2 + tau0^2)^(1/2)))/(k0^2 + tau0^2)^2) + (Nx*k0*s*tau0*sin(s*(k0^2 + tau0^2)^(1/2)))/(k0^2 + tau0^2)^(3/2);
    DF2_tau0 = (2*Ny*k0*tau0*(cos(s*(k0^2 + tau0^2)^(1/2)) - 1))/(k0^2 + tau0^2)^2 - By*((k0*sin(s*(k0^2 + tau0^2)^(1/2)))/(k0^2 + tau0^2)^(3/2) - (k0*s)/(k0^2 + tau0^2) + (2*k0*s*tau0^2)/(k0^2 + tau0^2)^2 - (3*k0*tau0^2*sin(s*(k0^2 + tau0^2)^(1/2)))/(k0^2 + tau0^2)^(5/2) + (k0*s*tau0^2*cos(s*(k0^2 + tau0^2)^(1/2)))/(k0^2 + tau0^2)^2) - Ty*((2*s*tau0^3)/(k0^2 + tau0^2)^2 - (2*s*tau0)/(k0^2 + tau0^2) + (3*k0^2*tau0*sin(s*(k0^2 + tau0^2)^(1/2)))/(k0^2 + tau0^2)^(5/2) - (k0^2*s*tau0*cos(s*(k0^2 + tau0^2)^(1/2)))/(k0^2 + tau0^2)^2) + (Ny*k0*s*tau0*sin(s*(k0^2 + tau0^2)^(1/2)))/(k0^2 + tau0^2)^(3/2);
    DF3_tau0 = (2*Nz*k0*tau0*(cos(s*(k0^2 + tau0^2)^(1/2)) - 1))/(k0^2 + tau0^2)^2 - Bz*((k0*sin(s*(k0^2 + tau0^2)^(1/2)))/(k0^2 + tau0^2)^(3/2) - (k0*s)/(k0^2 + tau0^2) + (2*k0*s*tau0^2)/(k0^2 + tau0^2)^2 - (3*k0*tau0^2*sin(s*(k0^2 + tau0^2)^(1/2)))/(k0^2 + tau0^2)^(5/2) + (k0*s*tau0^2*cos(s*(k0^2 + tau0^2)^(1/2)))/(k0^2 + tau0^2)^2) - Tz*((2*s*tau0^3)/(k0^2 + tau0^2)^2 - (2*s*tau0)/(k0^2 + tau0^2) + (3*k0^2*tau0*sin(s*(k0^2 + tau0^2)^(1/2)))/(k0^2 + tau0^2)^(5/2) - (k0^2*s*tau0*cos(s*(k0^2 + tau0^2)^(1/2)))/(k0^2 + tau0^2)^2) + (Nz*k0*s*tau0*sin(s*(k0^2 + tau0^2)^(1/2)))/(k0^2 + tau0^2)^(3/2);
    Df.f1t0 = DF1_tau0;
    Df.f2t0 = DF2_tau0;
    Df.f3t0 = DF3_tau0;

    % -- derivative of SECOND helix w.r.t curvature k0 --
    DG1_k0 = (((tau1^2*(s - sj))/(k1^2 + tau1^2) + (k1^2*sin((s - sj)*(k1^2 + tau1^2)^(1/2)))/(k1^2 + tau1^2)^(3/2))*(Bx*tau0^3 - Bx*tau0^3*cos(sj*(k0^2 + tau0^2)^(1/2)) - Bx*k0^2*tau0 - 2*Tx*k0*tau0^2 + Bx*k0^2*tau0*cos(sj*(k0^2 + tau0^2)^(1/2)) + Nx*k0^4*sj*cos(sj*(k0^2 + tau0^2)^(1/2)) + Nx*tau0^2*sin(sj*(k0^2 + tau0^2)^(1/2))*(k0^2 + tau0^2)^(1/2) + 2*Tx*k0*tau0^2*cos(sj*(k0^2 + tau0^2)^(1/2)) + Nx*k0^2*sj*tau0^2*cos(sj*(k0^2 + tau0^2)^(1/2)) - Tx*k0^3*sj*sin(sj*(k0^2 + tau0^2)^(1/2))*(k0^2 + tau0^2)^(1/2) + Bx*k0^2*sj*tau0*sin(sj*(k0^2 + tau0^2)^(1/2))*(k0^2 + tau0^2)^(1/2)))/(k0^2 + tau0^2)^2 - (((k1*tau1*(s - sj))/(k1^2 + tau1^2) - (k1*tau1*sin((s - sj)*(k1^2 + tau1^2)^(1/2)))/(k1^2 + tau1^2)^(3/2))*(Tx*tau0^3*cos(sj*(k0^2 + tau0^2)^(1/2)) - Tx*tau0^3 - 2*Bx*k0*tau0^2 + Tx*k0^2*tau0 + 2*Bx*k0*tau0^2*cos(sj*(k0^2 + tau0^2)^(1/2)) - Tx*k0^2*tau0*cos(sj*(k0^2 + tau0^2)^(1/2)) - Nx*k0*tau0*sin(sj*(k0^2 + tau0^2)^(1/2))*(k0^2 + tau0^2)^(1/2) + Nx*k0*sj*tau0^3*cos(sj*(k0^2 + tau0^2)^(1/2)) + Nx*k0^3*sj*tau0*cos(sj*(k0^2 + tau0^2)^(1/2)) + Bx*k0*sj*tau0^2*sin(sj*(k0^2 + tau0^2)^(1/2))*(k0^2 + tau0^2)^(1/2) - Tx*k0^2*sj*tau0*sin(sj*(k0^2 + tau0^2)^(1/2))*(k0^2 + tau0^2)^(1/2)))/(k0^2 + tau0^2)^2 + (k1*(cos((s - sj)*(k1^2 + tau1^2)^(1/2)) - 1)*(Tx*tau0^2*sin(sj*(k0^2 + tau0^2)^(1/2)) + Bx*k0*tau0*sin(sj*(k0^2 + tau0^2)^(1/2)) + Nx*k0^3*sj*sin(sj*(k0^2 + tau0^2)^(1/2)) + Nx*k0*sj*tau0^2*sin(sj*(k0^2 + tau0^2)^(1/2)) + Tx*k0^2*sj*cos(sj*(k0^2 + tau0^2)^(1/2))*(k0^2 + tau0^2)^(1/2) - Bx*k0*sj*tau0*cos(sj*(k0^2 + tau0^2)^(1/2))*(k0^2 + tau0^2)^(1/2)))/((k0^2 + tau0^2)^(3/2)*(k1^2 + tau1^2));
    DG2_k0 = (((tau1^2*(s - sj))/(k1^2 + tau1^2) + (k1^2*sin((s - sj)*(k1^2 + tau1^2)^(1/2)))/(k1^2 + tau1^2)^(3/2))*(By*tau0^3 - By*tau0^3*cos(sj*(k0^2 + tau0^2)^(1/2)) - By*k0^2*tau0 - 2*Ty*k0*tau0^2 + By*k0^2*tau0*cos(sj*(k0^2 + tau0^2)^(1/2)) + Ny*k0^4*sj*cos(sj*(k0^2 + tau0^2)^(1/2)) + Ny*tau0^2*sin(sj*(k0^2 + tau0^2)^(1/2))*(k0^2 + tau0^2)^(1/2) + 2*Ty*k0*tau0^2*cos(sj*(k0^2 + tau0^2)^(1/2)) + Ny*k0^2*sj*tau0^2*cos(sj*(k0^2 + tau0^2)^(1/2)) - Ty*k0^3*sj*sin(sj*(k0^2 + tau0^2)^(1/2))*(k0^2 + tau0^2)^(1/2) + By*k0^2*sj*tau0*sin(sj*(k0^2 + tau0^2)^(1/2))*(k0^2 + tau0^2)^(1/2)))/(k0^2 + tau0^2)^2 - (((k1*tau1*(s - sj))/(k1^2 + tau1^2) - (k1*tau1*sin((s - sj)*(k1^2 + tau1^2)^(1/2)))/(k1^2 + tau1^2)^(3/2))*(Ty*tau0^3*cos(sj*(k0^2 + tau0^2)^(1/2)) - Ty*tau0^3 - 2*By*k0*tau0^2 + Ty*k0^2*tau0 + 2*By*k0*tau0^2*cos(sj*(k0^2 + tau0^2)^(1/2)) - Ty*k0^2*tau0*cos(sj*(k0^2 + tau0^2)^(1/2)) - Ny*k0*tau0*sin(sj*(k0^2 + tau0^2)^(1/2))*(k0^2 + tau0^2)^(1/2) + Ny*k0*sj*tau0^3*cos(sj*(k0^2 + tau0^2)^(1/2)) + Ny*k0^3*sj*tau0*cos(sj*(k0^2 + tau0^2)^(1/2)) + By*k0*sj*tau0^2*sin(sj*(k0^2 + tau0^2)^(1/2))*(k0^2 + tau0^2)^(1/2) - Ty*k0^2*sj*tau0*sin(sj*(k0^2 + tau0^2)^(1/2))*(k0^2 + tau0^2)^(1/2)))/(k0^2 + tau0^2)^2 + (k1*(cos((s - sj)*(k1^2 + tau1^2)^(1/2)) - 1)*(Ty*tau0^2*sin(sj*(k0^2 + tau0^2)^(1/2)) + By*k0*tau0*sin(sj*(k0^2 + tau0^2)^(1/2)) + Ny*k0^3*sj*sin(sj*(k0^2 + tau0^2)^(1/2)) + Ny*k0*sj*tau0^2*sin(sj*(k0^2 + tau0^2)^(1/2)) + Ty*k0^2*sj*cos(sj*(k0^2 + tau0^2)^(1/2))*(k0^2 + tau0^2)^(1/2) - By*k0*sj*tau0*cos(sj*(k0^2 + tau0^2)^(1/2))*(k0^2 + tau0^2)^(1/2)))/((k0^2 + tau0^2)^(3/2)*(k1^2 + tau1^2));
    DG3_k0 = (((tau1^2*(s - sj))/(k1^2 + tau1^2) + (k1^2*sin((s - sj)*(k1^2 + tau1^2)^(1/2)))/(k1^2 + tau1^2)^(3/2))*(Bz*tau0^3 - Bz*tau0^3*cos(sj*(k0^2 + tau0^2)^(1/2)) - Bz*k0^2*tau0 - 2*Tz*k0*tau0^2 + Bz*k0^2*tau0*cos(sj*(k0^2 + tau0^2)^(1/2)) + Nz*k0^4*sj*cos(sj*(k0^2 + tau0^2)^(1/2)) + Nz*tau0^2*sin(sj*(k0^2 + tau0^2)^(1/2))*(k0^2 + tau0^2)^(1/2) + 2*Tz*k0*tau0^2*cos(sj*(k0^2 + tau0^2)^(1/2)) + Nz*k0^2*sj*tau0^2*cos(sj*(k0^2 + tau0^2)^(1/2)) - Tz*k0^3*sj*sin(sj*(k0^2 + tau0^2)^(1/2))*(k0^2 + tau0^2)^(1/2) + Bz*k0^2*sj*tau0*sin(sj*(k0^2 + tau0^2)^(1/2))*(k0^2 + tau0^2)^(1/2)))/(k0^2 + tau0^2)^2 - (((k1*tau1*(s - sj))/(k1^2 + tau1^2) - (k1*tau1*sin((s - sj)*(k1^2 + tau1^2)^(1/2)))/(k1^2 + tau1^2)^(3/2))*(Tz*tau0^3*cos(sj*(k0^2 + tau0^2)^(1/2)) - Tz*tau0^3 - 2*Bz*k0*tau0^2 + Tz*k0^2*tau0 + 2*Bz*k0*tau0^2*cos(sj*(k0^2 + tau0^2)^(1/2)) - Tz*k0^2*tau0*cos(sj*(k0^2 + tau0^2)^(1/2)) - Nz*k0*tau0*sin(sj*(k0^2 + tau0^2)^(1/2))*(k0^2 + tau0^2)^(1/2) + Nz*k0*sj*tau0^3*cos(sj*(k0^2 + tau0^2)^(1/2)) + Nz*k0^3*sj*tau0*cos(sj*(k0^2 + tau0^2)^(1/2)) + Bz*k0*sj*tau0^2*sin(sj*(k0^2 + tau0^2)^(1/2))*(k0^2 + tau0^2)^(1/2) - Tz*k0^2*sj*tau0*sin(sj*(k0^2 + tau0^2)^(1/2))*(k0^2 + tau0^2)^(1/2)))/(k0^2 + tau0^2)^2 + (k1*(cos((s - sj)*(k1^2 + tau1^2)^(1/2)) - 1)*(Tz*tau0^2*sin(sj*(k0^2 + tau0^2)^(1/2)) + Bz*k0*tau0*sin(sj*(k0^2 + tau0^2)^(1/2)) + Nz*k0^3*sj*sin(sj*(k0^2 + tau0^2)^(1/2)) + Nz*k0*sj*tau0^2*sin(sj*(k0^2 + tau0^2)^(1/2)) + Tz*k0^2*sj*cos(sj*(k0^2 + tau0^2)^(1/2))*(k0^2 + tau0^2)^(1/2) - Bz*k0*sj*tau0*cos(sj*(k0^2 + tau0^2)^(1/2))*(k0^2 + tau0^2)^(1/2)))/((k0^2 + tau0^2)^(3/2)*(k1^2 + tau1^2));
    Df.g1k0 = DG1_k0;
    Df.g2k0 = DG2_k0;
    Df.g3k0 = DG3_k0;
    
    % -- derivative of SECOND helix w.r.t torsion tau0 --
    DG1_tau0 = (((tau1^2*(s - sj))/(k1^2 + tau1^2) + (k1^2*sin((s - sj)*(k1^2 + tau1^2)^(1/2)))/(k1^2 + tau1^2)^(3/2))*(Bx*k0^3 - Bx*k0*tau0^2 + 2*Tx*k0^2*tau0 - Bx*k0^3*cos(sj*(k0^2 + tau0^2)^(1/2)) + Bx*k0*tau0^2*cos(sj*(k0^2 + tau0^2)^(1/2)) - 2*Tx*k0^2*tau0*cos(sj*(k0^2 + tau0^2)^(1/2)) - Nx*k0*tau0*sin(sj*(k0^2 + tau0^2)^(1/2))*(k0^2 + tau0^2)^(1/2) + Nx*k0*sj*tau0^3*cos(sj*(k0^2 + tau0^2)^(1/2)) + Nx*k0^3*sj*tau0*cos(sj*(k0^2 + tau0^2)^(1/2)) + Bx*k0*sj*tau0^2*sin(sj*(k0^2 + tau0^2)^(1/2))*(k0^2 + tau0^2)^(1/2) - Tx*k0^2*sj*tau0*sin(sj*(k0^2 + tau0^2)^(1/2))*(k0^2 + tau0^2)^(1/2)))/(k0^2 + tau0^2)^2 - (((k1*tau1*(s - sj))/(k1^2 + tau1^2) - (k1*tau1*sin((s - sj)*(k1^2 + tau1^2)^(1/2)))/(k1^2 + tau1^2)^(3/2))*(Tx*k0^3*cos(sj*(k0^2 + tau0^2)^(1/2)) - Tx*k0^3 + 2*Bx*k0^2*tau0 + Tx*k0*tau0^2 - 2*Bx*k0^2*tau0*cos(sj*(k0^2 + tau0^2)^(1/2)) + Nx*k0^2*sin(sj*(k0^2 + tau0^2)^(1/2))*(k0^2 + tau0^2)^(1/2) - Tx*k0*tau0^2*cos(sj*(k0^2 + tau0^2)^(1/2)) + Nx*sj*tau0^4*cos(sj*(k0^2 + tau0^2)^(1/2)) + Nx*k0^2*sj*tau0^2*cos(sj*(k0^2 + tau0^2)^(1/2)) + Bx*sj*tau0^3*sin(sj*(k0^2 + tau0^2)^(1/2))*(k0^2 + tau0^2)^(1/2) - Tx*k0*sj*tau0^2*sin(sj*(k0^2 + tau0^2)^(1/2))*(k0^2 + tau0^2)^(1/2)))/(k0^2 + tau0^2)^2 - (k1*(cos((s - sj)*(k1^2 + tau1^2)^(1/2)) - 1)*(Bx*k0^2*sin(sj*(k0^2 + tau0^2)^(1/2)) + Tx*k0*tau0*sin(sj*(k0^2 + tau0^2)^(1/2)) - Nx*sj*tau0^3*sin(sj*(k0^2 + tau0^2)^(1/2)) - Nx*k0^2*sj*tau0*sin(sj*(k0^2 + tau0^2)^(1/2)) + Bx*sj*tau0^2*cos(sj*(k0^2 + tau0^2)^(1/2))*(k0^2 + tau0^2)^(1/2) - Tx*k0*sj*tau0*cos(sj*(k0^2 + tau0^2)^(1/2))*(k0^2 + tau0^2)^(1/2)))/((k0^2 + tau0^2)^(3/2)*(k1^2 + tau1^2));
    DG2_tau0 = (((tau1^2*(s - sj))/(k1^2 + tau1^2) + (k1^2*sin((s - sj)*(k1^2 + tau1^2)^(1/2)))/(k1^2 + tau1^2)^(3/2))*(By*k0^3 - By*k0*tau0^2 + 2*Ty*k0^2*tau0 - By*k0^3*cos(sj*(k0^2 + tau0^2)^(1/2)) + By*k0*tau0^2*cos(sj*(k0^2 + tau0^2)^(1/2)) - 2*Ty*k0^2*tau0*cos(sj*(k0^2 + tau0^2)^(1/2)) - Ny*k0*tau0*sin(sj*(k0^2 + tau0^2)^(1/2))*(k0^2 + tau0^2)^(1/2) + Ny*k0*sj*tau0^3*cos(sj*(k0^2 + tau0^2)^(1/2)) + Ny*k0^3*sj*tau0*cos(sj*(k0^2 + tau0^2)^(1/2)) + By*k0*sj*tau0^2*sin(sj*(k0^2 + tau0^2)^(1/2))*(k0^2 + tau0^2)^(1/2) - Ty*k0^2*sj*tau0*sin(sj*(k0^2 + tau0^2)^(1/2))*(k0^2 + tau0^2)^(1/2)))/(k0^2 + tau0^2)^2 - (((k1*tau1*(s - sj))/(k1^2 + tau1^2) - (k1*tau1*sin((s - sj)*(k1^2 + tau1^2)^(1/2)))/(k1^2 + tau1^2)^(3/2))*(Ty*k0^3*cos(sj*(k0^2 + tau0^2)^(1/2)) - Ty*k0^3 + 2*By*k0^2*tau0 + Ty*k0*tau0^2 - 2*By*k0^2*tau0*cos(sj*(k0^2 + tau0^2)^(1/2)) + Ny*k0^2*sin(sj*(k0^2 + tau0^2)^(1/2))*(k0^2 + tau0^2)^(1/2) - Ty*k0*tau0^2*cos(sj*(k0^2 + tau0^2)^(1/2)) + Ny*sj*tau0^4*cos(sj*(k0^2 + tau0^2)^(1/2)) + Ny*k0^2*sj*tau0^2*cos(sj*(k0^2 + tau0^2)^(1/2)) + By*sj*tau0^3*sin(sj*(k0^2 + tau0^2)^(1/2))*(k0^2 + tau0^2)^(1/2) - Ty*k0*sj*tau0^2*sin(sj*(k0^2 + tau0^2)^(1/2))*(k0^2 + tau0^2)^(1/2)))/(k0^2 + tau0^2)^2 - (k1*(cos((s - sj)*(k1^2 + tau1^2)^(1/2)) - 1)*(By*k0^2*sin(sj*(k0^2 + tau0^2)^(1/2)) + Ty*k0*tau0*sin(sj*(k0^2 + tau0^2)^(1/2)) - Ny*sj*tau0^3*sin(sj*(k0^2 + tau0^2)^(1/2)) - Ny*k0^2*sj*tau0*sin(sj*(k0^2 + tau0^2)^(1/2)) + By*sj*tau0^2*cos(sj*(k0^2 + tau0^2)^(1/2))*(k0^2 + tau0^2)^(1/2) - Ty*k0*sj*tau0*cos(sj*(k0^2 + tau0^2)^(1/2))*(k0^2 + tau0^2)^(1/2)))/((k0^2 + tau0^2)^(3/2)*(k1^2 + tau1^2));
    DG3_tau0 = (((tau1^2*(s - sj))/(k1^2 + tau1^2) + (k1^2*sin((s - sj)*(k1^2 + tau1^2)^(1/2)))/(k1^2 + tau1^2)^(3/2))*(Bz*k0^3 - Bz*k0*tau0^2 + 2*Tz*k0^2*tau0 - Bz*k0^3*cos(sj*(k0^2 + tau0^2)^(1/2)) + Bz*k0*tau0^2*cos(sj*(k0^2 + tau0^2)^(1/2)) - 2*Tz*k0^2*tau0*cos(sj*(k0^2 + tau0^2)^(1/2)) - Nz*k0*tau0*sin(sj*(k0^2 + tau0^2)^(1/2))*(k0^2 + tau0^2)^(1/2) + Nz*k0*sj*tau0^3*cos(sj*(k0^2 + tau0^2)^(1/2)) + Nz*k0^3*sj*tau0*cos(sj*(k0^2 + tau0^2)^(1/2)) + Bz*k0*sj*tau0^2*sin(sj*(k0^2 + tau0^2)^(1/2))*(k0^2 + tau0^2)^(1/2) - Tz*k0^2*sj*tau0*sin(sj*(k0^2 + tau0^2)^(1/2))*(k0^2 + tau0^2)^(1/2)))/(k0^2 + tau0^2)^2 - (((k1*tau1*(s - sj))/(k1^2 + tau1^2) - (k1*tau1*sin((s - sj)*(k1^2 + tau1^2)^(1/2)))/(k1^2 + tau1^2)^(3/2))*(Tz*k0^3*cos(sj*(k0^2 + tau0^2)^(1/2)) - Tz*k0^3 + 2*Bz*k0^2*tau0 + Tz*k0*tau0^2 - 2*Bz*k0^2*tau0*cos(sj*(k0^2 + tau0^2)^(1/2)) + Nz*k0^2*sin(sj*(k0^2 + tau0^2)^(1/2))*(k0^2 + tau0^2)^(1/2) - Tz*k0*tau0^2*cos(sj*(k0^2 + tau0^2)^(1/2)) + Nz*sj*tau0^4*cos(sj*(k0^2 + tau0^2)^(1/2)) + Nz*k0^2*sj*tau0^2*cos(sj*(k0^2 + tau0^2)^(1/2)) + Bz*sj*tau0^3*sin(sj*(k0^2 + tau0^2)^(1/2))*(k0^2 + tau0^2)^(1/2) - Tz*k0*sj*tau0^2*sin(sj*(k0^2 + tau0^2)^(1/2))*(k0^2 + tau0^2)^(1/2)))/(k0^2 + tau0^2)^2 - (k1*(cos((s - sj)*(k1^2 + tau1^2)^(1/2)) - 1)*(Bz*k0^2*sin(sj*(k0^2 + tau0^2)^(1/2)) + Tz*k0*tau0*sin(sj*(k0^2 + tau0^2)^(1/2)) - Nz*sj*tau0^3*sin(sj*(k0^2 + tau0^2)^(1/2)) - Nz*k0^2*sj*tau0*sin(sj*(k0^2 + tau0^2)^(1/2)) + Bz*sj*tau0^2*cos(sj*(k0^2 + tau0^2)^(1/2))*(k0^2 + tau0^2)^(1/2) - Tz*k0*sj*tau0*cos(sj*(k0^2 + tau0^2)^(1/2))*(k0^2 + tau0^2)^(1/2)))/((k0^2 + tau0^2)^(3/2)*(k1^2 + tau1^2));
    Df.g1t0 = DG1_tau0;
    Df.g2t0 = DG2_tau0;
    Df.g3t0 = DG3_tau0;
    
    % -- derivative of SECOND helix w.r.t curvature k1 --
    DG1_k1 = ((Nx*tau0*sin(sj*(k0^2 + tau0^2)^(1/2)))/(k0^2 + tau0^2)^(1/2) - Bx*(k0^2/(k0^2 + tau0^2) + (tau0^2*cos(sj*(k0^2 + tau0^2)^(1/2)))/(k0^2 + tau0^2)) + (Tx*k0*tau0*(cos(sj*(k0^2 + tau0^2)^(1/2)) - 1))/(k0^2 + tau0^2))*((tau1*sin((s - sj)*(k1^2 + tau1^2)^(1/2)))/(k1^2 + tau1^2)^(3/2) - (tau1*(s - sj))/(k1^2 + tau1^2) + (2*k1^2*tau1*(s - sj))/(k1^2 + tau1^2)^2 - (3*k1^2*tau1*sin((s - sj)*(k1^2 + tau1^2)^(1/2)))/(k1^2 + tau1^2)^(5/2) + (k1^2*tau1*cos((s - sj)*(k1^2 + tau1^2)^(1/2))*(s - sj))/(k1^2 + tau1^2)^2) - (Tx*(tau0^2/(k0^2 + tau0^2) + (k0^2*cos(sj*(k0^2 + tau0^2)^(1/2)))/(k0^2 + tau0^2)) + (Nx*k0*sin(sj*(k0^2 + tau0^2)^(1/2)))/(k0^2 + tau0^2)^(1/2) - (Bx*k0*tau0*(cos(sj*(k0^2 + tau0^2)^(1/2)) - 1))/(k0^2 + tau0^2))*((3*k1^3*sin((s - sj)*(k1^2 + tau1^2)^(1/2)))/(k1^2 + tau1^2)^(5/2) - (2*k1*sin((s - sj)*(k1^2 + tau1^2)^(1/2)))/(k1^2 + tau1^2)^(3/2) + (2*k1*tau1^2*(s - sj))/(k1^2 + tau1^2)^2 - (k1^3*cos((s - sj)*(k1^2 + tau1^2)^(1/2))*(s - sj))/(k1^2 + tau1^2)^2) - ((cos((s - sj)*(k1^2 + tau1^2)^(1/2)) - 1)*(Nx*cos(sj*(k0^2 + tau0^2)^(1/2)) + (Bx*tau0*sin(sj*(k0^2 + tau0^2)^(1/2)))/(k0^2 + tau0^2)^(1/2) - (Tx*k0*sin(sj*(k0^2 + tau0^2)^(1/2)))/(k0^2 + tau0^2)^(1/2)))/(k1^2 + tau1^2) + (2*k1^2*(cos((s - sj)*(k1^2 + tau1^2)^(1/2)) - 1)*(Nx*cos(sj*(k0^2 + tau0^2)^(1/2)) + (Bx*tau0*sin(sj*(k0^2 + tau0^2)^(1/2)))/(k0^2 + tau0^2)^(1/2) - (Tx*k0*sin(sj*(k0^2 + tau0^2)^(1/2)))/(k0^2 + tau0^2)^(1/2)))/(k1^2 + tau1^2)^2 + (k1^2*sin((s - sj)*(k1^2 + tau1^2)^(1/2))*(s - sj)*(Nx*cos(sj*(k0^2 + tau0^2)^(1/2)) + (Bx*tau0*sin(sj*(k0^2 + tau0^2)^(1/2)))/(k0^2 + tau0^2)^(1/2) - (Tx*k0*sin(sj*(k0^2 + tau0^2)^(1/2)))/(k0^2 + tau0^2)^(1/2)))/(k1^2 + tau1^2)^(3/2);
    DG2_k1 = ((Ny*tau0*sin(sj*(k0^2 + tau0^2)^(1/2)))/(k0^2 + tau0^2)^(1/2) - By*(k0^2/(k0^2 + tau0^2) + (tau0^2*cos(sj*(k0^2 + tau0^2)^(1/2)))/(k0^2 + tau0^2)) + (Ty*k0*tau0*(cos(sj*(k0^2 + tau0^2)^(1/2)) - 1))/(k0^2 + tau0^2))*((tau1*sin((s - sj)*(k1^2 + tau1^2)^(1/2)))/(k1^2 + tau1^2)^(3/2) - (tau1*(s - sj))/(k1^2 + tau1^2) + (2*k1^2*tau1*(s - sj))/(k1^2 + tau1^2)^2 - (3*k1^2*tau1*sin((s - sj)*(k1^2 + tau1^2)^(1/2)))/(k1^2 + tau1^2)^(5/2) + (k1^2*tau1*cos((s - sj)*(k1^2 + tau1^2)^(1/2))*(s - sj))/(k1^2 + tau1^2)^2) - (Ty*(tau0^2/(k0^2 + tau0^2) + (k0^2*cos(sj*(k0^2 + tau0^2)^(1/2)))/(k0^2 + tau0^2)) + (Ny*k0*sin(sj*(k0^2 + tau0^2)^(1/2)))/(k0^2 + tau0^2)^(1/2) - (By*k0*tau0*(cos(sj*(k0^2 + tau0^2)^(1/2)) - 1))/(k0^2 + tau0^2))*((3*k1^3*sin((s - sj)*(k1^2 + tau1^2)^(1/2)))/(k1^2 + tau1^2)^(5/2) - (2*k1*sin((s - sj)*(k1^2 + tau1^2)^(1/2)))/(k1^2 + tau1^2)^(3/2) + (2*k1*tau1^2*(s - sj))/(k1^2 + tau1^2)^2 - (k1^3*cos((s - sj)*(k1^2 + tau1^2)^(1/2))*(s - sj))/(k1^2 + tau1^2)^2) - ((cos((s - sj)*(k1^2 + tau1^2)^(1/2)) - 1)*(Ny*cos(sj*(k0^2 + tau0^2)^(1/2)) + (By*tau0*sin(sj*(k0^2 + tau0^2)^(1/2)))/(k0^2 + tau0^2)^(1/2) - (Ty*k0*sin(sj*(k0^2 + tau0^2)^(1/2)))/(k0^2 + tau0^2)^(1/2)))/(k1^2 + tau1^2) + (2*k1^2*(cos((s - sj)*(k1^2 + tau1^2)^(1/2)) - 1)*(Ny*cos(sj*(k0^2 + tau0^2)^(1/2)) + (By*tau0*sin(sj*(k0^2 + tau0^2)^(1/2)))/(k0^2 + tau0^2)^(1/2) - (Ty*k0*sin(sj*(k0^2 + tau0^2)^(1/2)))/(k0^2 + tau0^2)^(1/2)))/(k1^2 + tau1^2)^2 + (k1^2*sin((s - sj)*(k1^2 + tau1^2)^(1/2))*(s - sj)*(Ny*cos(sj*(k0^2 + tau0^2)^(1/2)) + (By*tau0*sin(sj*(k0^2 + tau0^2)^(1/2)))/(k0^2 + tau0^2)^(1/2) - (Ty*k0*sin(sj*(k0^2 + tau0^2)^(1/2)))/(k0^2 + tau0^2)^(1/2)))/(k1^2 + tau1^2)^(3/2);
    DG3_k1 = ((Nz*tau0*sin(sj*(k0^2 + tau0^2)^(1/2)))/(k0^2 + tau0^2)^(1/2) - Bz*(k0^2/(k0^2 + tau0^2) + (tau0^2*cos(sj*(k0^2 + tau0^2)^(1/2)))/(k0^2 + tau0^2)) + (Tz*k0*tau0*(cos(sj*(k0^2 + tau0^2)^(1/2)) - 1))/(k0^2 + tau0^2))*((tau1*sin((s - sj)*(k1^2 + tau1^2)^(1/2)))/(k1^2 + tau1^2)^(3/2) - (tau1*(s - sj))/(k1^2 + tau1^2) + (2*k1^2*tau1*(s - sj))/(k1^2 + tau1^2)^2 - (3*k1^2*tau1*sin((s - sj)*(k1^2 + tau1^2)^(1/2)))/(k1^2 + tau1^2)^(5/2) + (k1^2*tau1*cos((s - sj)*(k1^2 + tau1^2)^(1/2))*(s - sj))/(k1^2 + tau1^2)^2) - (Tz*(tau0^2/(k0^2 + tau0^2) + (k0^2*cos(sj*(k0^2 + tau0^2)^(1/2)))/(k0^2 + tau0^2)) + (Nz*k0*sin(sj*(k0^2 + tau0^2)^(1/2)))/(k0^2 + tau0^2)^(1/2) - (Bz*k0*tau0*(cos(sj*(k0^2 + tau0^2)^(1/2)) - 1))/(k0^2 + tau0^2))*((3*k1^3*sin((s - sj)*(k1^2 + tau1^2)^(1/2)))/(k1^2 + tau1^2)^(5/2) - (2*k1*sin((s - sj)*(k1^2 + tau1^2)^(1/2)))/(k1^2 + tau1^2)^(3/2) + (2*k1*tau1^2*(s - sj))/(k1^2 + tau1^2)^2 - (k1^3*cos((s - sj)*(k1^2 + tau1^2)^(1/2))*(s - sj))/(k1^2 + tau1^2)^2) - ((cos((s - sj)*(k1^2 + tau1^2)^(1/2)) - 1)*(Nz*cos(sj*(k0^2 + tau0^2)^(1/2)) + (Bz*tau0*sin(sj*(k0^2 + tau0^2)^(1/2)))/(k0^2 + tau0^2)^(1/2) - (Tz*k0*sin(sj*(k0^2 + tau0^2)^(1/2)))/(k0^2 + tau0^2)^(1/2)))/(k1^2 + tau1^2) + (2*k1^2*(cos((s - sj)*(k1^2 + tau1^2)^(1/2)) - 1)*(Nz*cos(sj*(k0^2 + tau0^2)^(1/2)) + (Bz*tau0*sin(sj*(k0^2 + tau0^2)^(1/2)))/(k0^2 + tau0^2)^(1/2) - (Tz*k0*sin(sj*(k0^2 + tau0^2)^(1/2)))/(k0^2 + tau0^2)^(1/2)))/(k1^2 + tau1^2)^2 + (k1^2*sin((s - sj)*(k1^2 + tau1^2)^(1/2))*(s - sj)*(Nz*cos(sj*(k0^2 + tau0^2)^(1/2)) + (Bz*tau0*sin(sj*(k0^2 + tau0^2)^(1/2)))/(k0^2 + tau0^2)^(1/2) - (Tz*k0*sin(sj*(k0^2 + tau0^2)^(1/2)))/(k0^2 + tau0^2)^(1/2)))/(k1^2 + tau1^2)^(3/2);
    Df.g1k1 = DG1_k1;
    Df.g2k1 = DG2_k1;
    Df.g3k1 = DG3_k1;
    
    % -- derivative of SECOND helix w.r.t torsion tau1 --
    DG1_tau1 = ((Nx*tau0*sin(sj*(k0^2 + tau0^2)^(1/2)))/(k0^2 + tau0^2)^(1/2) - Bx*(k0^2/(k0^2 + tau0^2) + (tau0^2*cos(sj*(k0^2 + tau0^2)^(1/2)))/(k0^2 + tau0^2)) + (Tx*k0*tau0*(cos(sj*(k0^2 + tau0^2)^(1/2)) - 1))/(k0^2 + tau0^2))*((k1*sin((s - sj)*(k1^2 + tau1^2)^(1/2)))/(k1^2 + tau1^2)^(3/2) - (k1*(s - sj))/(k1^2 + tau1^2) + (2*k1*tau1^2*(s - sj))/(k1^2 + tau1^2)^2 - (3*k1*tau1^2*sin((s - sj)*(k1^2 + tau1^2)^(1/2)))/(k1^2 + tau1^2)^(5/2) + (k1*tau1^2*cos((s - sj)*(k1^2 + tau1^2)^(1/2))*(s - sj))/(k1^2 + tau1^2)^2) - (Tx*(tau0^2/(k0^2 + tau0^2) + (k0^2*cos(sj*(k0^2 + tau0^2)^(1/2)))/(k0^2 + tau0^2)) + (Nx*k0*sin(sj*(k0^2 + tau0^2)^(1/2)))/(k0^2 + tau0^2)^(1/2) - (Bx*k0*tau0*(cos(sj*(k0^2 + tau0^2)^(1/2)) - 1))/(k0^2 + tau0^2))*((2*tau1^3*(s - sj))/(k1^2 + tau1^2)^2 - (2*tau1*(s - sj))/(k1^2 + tau1^2) + (3*k1^2*tau1*sin((s - sj)*(k1^2 + tau1^2)^(1/2)))/(k1^2 + tau1^2)^(5/2) - (k1^2*tau1*cos((s - sj)*(k1^2 + tau1^2)^(1/2))*(s - sj))/(k1^2 + tau1^2)^2) + (2*k1*tau1*(cos((s - sj)*(k1^2 + tau1^2)^(1/2)) - 1)*(Nx*cos(sj*(k0^2 + tau0^2)^(1/2)) + (Bx*tau0*sin(sj*(k0^2 + tau0^2)^(1/2)))/(k0^2 + tau0^2)^(1/2) - (Tx*k0*sin(sj*(k0^2 + tau0^2)^(1/2)))/(k0^2 + tau0^2)^(1/2)))/(k1^2 + tau1^2)^2 + (k1*tau1*sin((s - sj)*(k1^2 + tau1^2)^(1/2))*(s - sj)*(Nx*cos(sj*(k0^2 + tau0^2)^(1/2)) + (Bx*tau0*sin(sj*(k0^2 + tau0^2)^(1/2)))/(k0^2 + tau0^2)^(1/2) - (Tx*k0*sin(sj*(k0^2 + tau0^2)^(1/2)))/(k0^2 + tau0^2)^(1/2)))/(k1^2 + tau1^2)^(3/2); 
    DG2_tau1 = ((Ny*tau0*sin(sj*(k0^2 + tau0^2)^(1/2)))/(k0^2 + tau0^2)^(1/2) - By*(k0^2/(k0^2 + tau0^2) + (tau0^2*cos(sj*(k0^2 + tau0^2)^(1/2)))/(k0^2 + tau0^2)) + (Ty*k0*tau0*(cos(sj*(k0^2 + tau0^2)^(1/2)) - 1))/(k0^2 + tau0^2))*((k1*sin((s - sj)*(k1^2 + tau1^2)^(1/2)))/(k1^2 + tau1^2)^(3/2) - (k1*(s - sj))/(k1^2 + tau1^2) + (2*k1*tau1^2*(s - sj))/(k1^2 + tau1^2)^2 - (3*k1*tau1^2*sin((s - sj)*(k1^2 + tau1^2)^(1/2)))/(k1^2 + tau1^2)^(5/2) + (k1*tau1^2*cos((s - sj)*(k1^2 + tau1^2)^(1/2))*(s - sj))/(k1^2 + tau1^2)^2) - (Ty*(tau0^2/(k0^2 + tau0^2) + (k0^2*cos(sj*(k0^2 + tau0^2)^(1/2)))/(k0^2 + tau0^2)) + (Ny*k0*sin(sj*(k0^2 + tau0^2)^(1/2)))/(k0^2 + tau0^2)^(1/2) - (By*k0*tau0*(cos(sj*(k0^2 + tau0^2)^(1/2)) - 1))/(k0^2 + tau0^2))*((2*tau1^3*(s - sj))/(k1^2 + tau1^2)^2 - (2*tau1*(s - sj))/(k1^2 + tau1^2) + (3*k1^2*tau1*sin((s - sj)*(k1^2 + tau1^2)^(1/2)))/(k1^2 + tau1^2)^(5/2) - (k1^2*tau1*cos((s - sj)*(k1^2 + tau1^2)^(1/2))*(s - sj))/(k1^2 + tau1^2)^2) + (2*k1*tau1*(cos((s - sj)*(k1^2 + tau1^2)^(1/2)) - 1)*(Ny*cos(sj*(k0^2 + tau0^2)^(1/2)) + (By*tau0*sin(sj*(k0^2 + tau0^2)^(1/2)))/(k0^2 + tau0^2)^(1/2) - (Ty*k0*sin(sj*(k0^2 + tau0^2)^(1/2)))/(k0^2 + tau0^2)^(1/2)))/(k1^2 + tau1^2)^2 + (k1*tau1*sin((s - sj)*(k1^2 + tau1^2)^(1/2))*(s - sj)*(Ny*cos(sj*(k0^2 + tau0^2)^(1/2)) + (By*tau0*sin(sj*(k0^2 + tau0^2)^(1/2)))/(k0^2 + tau0^2)^(1/2) - (Ty*k0*sin(sj*(k0^2 + tau0^2)^(1/2)))/(k0^2 + tau0^2)^(1/2)))/(k1^2 + tau1^2)^(3/2);
    DG3_tau1 = ((Nz*tau0*sin(sj*(k0^2 + tau0^2)^(1/2)))/(k0^2 + tau0^2)^(1/2) - Bz*(k0^2/(k0^2 + tau0^2) + (tau0^2*cos(sj*(k0^2 + tau0^2)^(1/2)))/(k0^2 + tau0^2)) + (Tz*k0*tau0*(cos(sj*(k0^2 + tau0^2)^(1/2)) - 1))/(k0^2 + tau0^2))*((k1*sin((s - sj)*(k1^2 + tau1^2)^(1/2)))/(k1^2 + tau1^2)^(3/2) - (k1*(s - sj))/(k1^2 + tau1^2) + (2*k1*tau1^2*(s - sj))/(k1^2 + tau1^2)^2 - (3*k1*tau1^2*sin((s - sj)*(k1^2 + tau1^2)^(1/2)))/(k1^2 + tau1^2)^(5/2) + (k1*tau1^2*cos((s - sj)*(k1^2 + tau1^2)^(1/2))*(s - sj))/(k1^2 + tau1^2)^2) - (Tz*(tau0^2/(k0^2 + tau0^2) + (k0^2*cos(sj*(k0^2 + tau0^2)^(1/2)))/(k0^2 + tau0^2)) + (Nz*k0*sin(sj*(k0^2 + tau0^2)^(1/2)))/(k0^2 + tau0^2)^(1/2) - (Bz*k0*tau0*(cos(sj*(k0^2 + tau0^2)^(1/2)) - 1))/(k0^2 + tau0^2))*((2*tau1^3*(s - sj))/(k1^2 + tau1^2)^2 - (2*tau1*(s - sj))/(k1^2 + tau1^2) + (3*k1^2*tau1*sin((s - sj)*(k1^2 + tau1^2)^(1/2)))/(k1^2 + tau1^2)^(5/2) - (k1^2*tau1*cos((s - sj)*(k1^2 + tau1^2)^(1/2))*(s - sj))/(k1^2 + tau1^2)^2) + (2*k1*tau1*(cos((s - sj)*(k1^2 + tau1^2)^(1/2)) - 1)*(Nz*cos(sj*(k0^2 + tau0^2)^(1/2)) + (Bz*tau0*sin(sj*(k0^2 + tau0^2)^(1/2)))/(k0^2 + tau0^2)^(1/2) - (Tz*k0*sin(sj*(k0^2 + tau0^2)^(1/2)))/(k0^2 + tau0^2)^(1/2)))/(k1^2 + tau1^2)^2 + (k1*tau1*sin((s - sj)*(k1^2 + tau1^2)^(1/2))*(s - sj)*(Nz*cos(sj*(k0^2 + tau0^2)^(1/2)) + (Bz*tau0*sin(sj*(k0^2 + tau0^2)^(1/2)))/(k0^2 + tau0^2)^(1/2) - (Tz*k0*sin(sj*(k0^2 + tau0^2)^(1/2)))/(k0^2 + tau0^2)^(1/2)))/(k1^2 + tau1^2)^(3/2);
    Df.g1t1 = DG1_tau1;
    Df.g2t1 = DG2_tau1;
    Df.g3t1 = DG3_tau1;
end